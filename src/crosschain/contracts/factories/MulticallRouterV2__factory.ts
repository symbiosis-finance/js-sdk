/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { MulticallRouterV2, MulticallRouterV2Interface } from '../MulticallRouterV2'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_amountIn',
                type: 'uint256',
            },
            {
                internalType: 'bytes[]',
                name: '_calldata',
                type: 'bytes[]',
            },
            {
                internalType: 'address[]',
                name: '_receiveSides',
                type: 'address[]',
            },
            {
                internalType: 'address[]',
                name: '_path',
                type: 'address[]',
            },
            {
                internalType: 'uint256[]',
                name: '_offset',
                type: 'uint256[]',
            },
            {
                internalType: 'bool[]',
                name: '_isNativeIn',
                type: 'bool[]',
            },
            {
                internalType: 'address',
                name: '_to',
                type: 'address',
            },
        ],
        name: 'multicall',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
]

const _bytecode =
    '0x608060405234801561001057600080fd5b506111c1806100206000396000f3fe6080604052600436106100225760003560e01c8063bc982fc41461002e57600080fd5b3661002957005b600080fd5b61004161003c366004610efb565b610043565b005b816000815181106100565761005661112b565b6020026020010151156100bd57600034116100b85760405162461bcd60e51b815260206004820152601c60248201527f4d756c746963616c6c526f757465723a207a65726f20616d6f756e740000000060448201526064015b60405180910390fd5b6100e9565b6100e9846000815181106100d3576100d361112b565b60200260200101516100e23390565b308a6106e4565b60005b8651811015610536578281815181106101075761010761112b565b6020026020010151156102935760004790506000808860008151811061012f5761012f61112b565b60200260200101519050803b915081600014156101b45760405162461bcd60e51b815260206004820152603060248201527f4d756c746963616c6c526f757465723a2063616c6c20666f722061206e6f6e2d60448201527f636f6e7472616374206163636f756e740000000000000000000000000000000060648201526084016100af565b6000808a86815181106101c9576101c961112b565b60200260200101516001600160a01b0316858d88815181106101ed576101ed61112b565b60200260200101516040516102029190610fe7565b60006040518083038185875af1925050503d806000811461023f576040519150601f19603f3d011682016040523d82523d6000602084013e610244565b606091505b50915091508161028957610270816040518060600160405280602381526020016111696023913961085c565b60405162461bcd60e51b81526004016100af9190611003565b5050505050610524565b60008582815181106102a7576102a761112b565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561030b57600080fd5b505afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610ee2565b905060008883815181106103595761035961112b565b6020026020010151905060008684815181106103775761037761112b565b602002602001015190506000808a86815181106103965761039661112b565b602002602001015190508483850152803b915081600014156104205760405162461bcd60e51b815260206004820152603060248201527f4d756c746963616c6c526f757465723a2063616c6c20666f722061206e6f6e2d60448201527f636f6e7472616374206163636f756e740000000000000000000000000000000060648201526084016100af565b505061045f8885815181106104375761043761112b565b60200260200101518a86815181106104515761045161112b565b602002602001015185610892565b6000808a86815181106104745761047461112b565b60200260200101516001600160a01b0316846040516104939190610fe7565b6000604051808303816000865af19150503d80600081146104d0576040519150601f19603f3d011682016040523d82523d6000602084013e6104d5565b606091505b50915091508161051e57610270816040518060400160405280601c81526020017f4d756c746963616c6c526f757465723a2063616c6c206661696c65640000000081525061085c565b50505050505b8061052e816110fa565b9150506100ec565b506000846001865161054891906110b3565b815181106105585761055861112b565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156105bc57600080fd5b505afa1580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190610ee2565b9050801561062d5761062d856001875161060e91906110b3565b8151811061061e5761061e61112b565b60200260200101518383610951565b4780156106d9576000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114610681576040519150601f19603f3d011682016040523d82523d6000602084013e610686565b606091505b50509050806106d75760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016100af565b505b505050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916107769190610fe7565b6000604051808303816000865af19150503d80600081146107b3576040519150601f19603f3d011682016040523d82523d6000602084013e6107b8565b606091505b50915091508180156107e25750805115806107e25750808060200190518101906107e29190610e47565b6108545760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260448201527f616e7366657246726f6d206661696c656400000000000000000000000000000060648201526084016100af565b505050505050565b606060448351101561086f57508061088c565b600483019250828060200190518101906108899190610e6b565b90505b92915050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015282919085169063dd62ed3e9060440160206040518083038186803b1580156108f557600080fd5b505afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d9190610ee2565b101561094c5761093f83836000610ac0565b61094c8383600019610ac0565b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916109db9190610fe7565b6000604051808303816000865af19150503d8060008114610a18576040519150601f19603f3d011682016040523d82523d6000602084013e610a1d565b606091505b5091509150818015610a47575080511580610a47575080806020019051810190610a479190610e47565b610ab95760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201527f616e73666572206661696c65640000000000000000000000000000000000000060648201526084016100af565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691610b4a9190610fe7565b6000604051808303816000865af19150503d8060008114610b87576040519150601f19603f3d011682016040523d82523d6000602084013e610b8c565b606091505b5091509150818015610bb6575080511580610bb6575080806020019051810190610bb69190610e47565b610ab95760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201527f726f7665206661696c656400000000000000000000000000000000000000000060648201526084016100af565b80356001600160a01b0381168114610c3f57600080fd5b919050565b600082601f830112610c5557600080fd5b81356020610c6a610c6583611067565b611036565b80838252828201915082860187848660051b8901011115610c8a57600080fd5b60005b85811015610cb057610c9e82610c28565b84529284019290840190600101610c8d565b5090979650505050505050565b600082601f830112610cce57600080fd5b81356020610cde610c6583611067565b80838252828201915082860187848660051b8901011115610cfe57600080fd5b60005b85811015610cb0578135610d1481611157565b84529284019290840190600101610d01565b600082601f830112610d3757600080fd5b81356020610d47610c6583611067565b80838252828201915082860187848660051b8901011115610d6757600080fd5b60005b85811015610cb057813567ffffffffffffffff811115610d8957600080fd5b8801603f81018a13610d9a57600080fd5b858101356040610dac610c658361108b565b8281528c82848601011115610dc057600080fd5b828285018a8301376000928101890192909252508552509284019290840190600101610d6a565b600082601f830112610df857600080fd5b81356020610e08610c6583611067565b80838252828201915082860187848660051b8901011115610e2857600080fd5b60005b85811015610cb057813584529284019290840190600101610e2b565b600060208284031215610e5957600080fd5b8151610e6481611157565b9392505050565b600060208284031215610e7d57600080fd5b815167ffffffffffffffff811115610e9457600080fd5b8201601f81018413610ea557600080fd5b8051610eb3610c658261108b565b818152856020838501011115610ec857600080fd5b610ed98260208301602086016110ca565b95945050505050565b600060208284031215610ef457600080fd5b5051919050565b600080600080600080600060e0888a031215610f1657600080fd5b87359650602088013567ffffffffffffffff80821115610f3557600080fd5b610f418b838c01610d26565b975060408a0135915080821115610f5757600080fd5b610f638b838c01610c44565b965060608a0135915080821115610f7957600080fd5b610f858b838c01610c44565b955060808a0135915080821115610f9b57600080fd5b610fa78b838c01610de7565b945060a08a0135915080821115610fbd57600080fd5b50610fca8a828b01610cbd565b925050610fd960c08901610c28565b905092959891949750929550565b60008251610ff98184602087016110ca565b9190910192915050565b60208152600082518060208401526110228160408501602087016110ca565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561105f5761105f611141565b604052919050565b600067ffffffffffffffff82111561108157611081611141565b5060051b60200190565b600067ffffffffffffffff8211156110a5576110a5611141565b50601f01601f191660200190565b6000828210156110c5576110c5611115565b500390565b60005b838110156110e55781810151838201526020016110cd565b838111156110f4576000848401525b50505050565b600060001982141561110e5761110e611115565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461116557600080fd5b5056fe4d756c746963616c6c526f757465723a206e61746976652063616c6c206661696c6564a2646970667358221220dbc5d27713815a216e194dcaeee0f467ee6a77e599fb355d519592906912cf4f64736f6c63430008070033'

type MulticallRouterV2ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: MulticallRouterV2ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class MulticallRouterV2__factory extends ContractFactory {
    constructor(...args: MulticallRouterV2ConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'MulticallRouterV2'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MulticallRouterV2> {
        return super.deploy(overrides || {}) as Promise<MulticallRouterV2>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): MulticallRouterV2 {
        return super.attach(address) as MulticallRouterV2
    }
    connect(signer: Signer): MulticallRouterV2__factory {
        return super.connect(signer) as MulticallRouterV2__factory
    }
    static readonly contractName: 'MulticallRouterV2'
    public readonly contractName: 'MulticallRouterV2'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): MulticallRouterV2Interface {
        return new utils.Interface(_abi) as MulticallRouterV2Interface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): MulticallRouterV2 {
        return new Contract(address, _abi, signerOrProvider) as MulticallRouterV2
    }
}
