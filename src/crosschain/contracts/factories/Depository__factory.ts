/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Depository, DepositoryInterface } from '../Depository'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'target',
                type: 'address',
            },
        ],
        name: 'AddressEmptyCode',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'ERC1967InvalidImplementation',
        type: 'error',
    },
    {
        inputs: [],
        name: 'ERC1967NonPayable',
        type: 'error',
    },
    {
        inputs: [],
        name: 'FailedCall',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidInitialization',
        type: 'error',
    },
    {
        inputs: [],
        name: 'NotInitializing',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'OwnableInvalidOwner',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'OwnableUnauthorizedAccount',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
        ],
        name: 'SafeERC20FailedOperation',
        type: 'error',
    },
    {
        inputs: [],
        name: 'UUPSUnauthorizedCallContext',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'slot',
                type: 'bytes32',
            },
        ],
        name: 'UUPSUnsupportedProxiableUUID',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'DepositID',
                name: 'depositID',
                type: 'bytes32',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                indexed: false,
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'unlocker',
                type: 'tuple',
            },
        ],
        name: 'DepositLocked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'DepositID',
                name: 'depositID',
                type: 'bytes32',
            },
        ],
        name: 'DepositUnlocked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint64',
                name: 'version',
                type: 'uint64',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'Upgraded',
        type: 'event',
    },
    {
        inputs: [],
        name: 'UPGRADE_INTERFACE_VERSION',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'd',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'u',
                type: 'tuple',
            },
        ],
        name: 'depositID',
        outputs: [
            {
                internalType: 'DepositID',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'DepositID',
                name: '',
                type: 'bytes32',
            },
        ],
        name: 'deposits',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IMetaRouter',
                name: '_metaRouter',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'unlocker',
                type: 'tuple',
            },
        ],
        name: 'lock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'metaRouter',
        outputs: [
            {
                internalType: 'contract IMetaRouter',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'proxiableUUID',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'unlocker',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newImplementation',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'upgradeToAndCall',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
]

const _bytecode =
    '0x60a060405234602f57600e6034565b6040516118ed6100808239608051818181610eb501526110b301526118ed90f35b600080fd5b603a603c565b565b603a603a6073565b6056906059906001600160a01b031682565b90565b6001600160a01b031690565b6056906044565b6056906065565b607a30606c565b60805256fe6080604052600436101561001257600080fd5b60003560e01c80633d4dff7b146100d25780634f1ef286146100cd57806352d1902d146100c8578063595a5cd7146100c3578063715018a6146100be5780638da5cb5b146100b9578063ad3cb1cc146100b4578063b523051e146100af578063c4d66de8146100aa578063d2563133146100a5578063dbec15bb146100a05763f2fde38b036100e05761062a565b610603565b61057e565b610566565b610536565b6104d9565b6103df565b6103c7565b6103ab565b6102db565b6102b7565b610147565b805b036100e057565b600080fd5b905035906100f2826100d7565b565b906020828203126100e057610108916100e5565b90565b610108916008021c5b60ff1690565b90610108915461010b565b600061013e610108928290600052602052604060002090565b61011a565b9052565b346100e05761017461016261015d3660046100f4565b610125565b60405191829182901515815260200190565b0390f35b6001600160a01b031690565b6001600160a01b0381166100d9565b905035906100f282610184565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176101f157604052565b6101a0565b906100f261020360405190565b92836101cf565b67ffffffffffffffff81116101f157602090601f01601f19160190565b0190565b90826000939282370152565b9092919261024c6102478261020a565b6101f6565b93818552818301116100e0576100f291602085019061022b565b9080601f830112156100e05781602061010893359101610237565b9190916040818403126100e0576102988382610193565b92602082013567ffffffffffffffff81116100e0576101089201610266565b6102cb6102c5366004610281565b90610662565b604051005b60009103126100e057565b346100e0576102eb3660046102d0565b6101746102f66106bc565b6040519182918290815260200190565b908160609103126100e05790565b908160409103126100e05790565b909182601f830112156100e05781359167ffffffffffffffff83116100e05760200192600183028401116100e057565b9160a0838303126100e0576103678284610306565b92606081013567ffffffffffffffff81116100e05783610388918301610314565b92608082013567ffffffffffffffff81116100e0576103a79201610322565b9091565b346100e0576102cb6103be366004610352565b92919091610844565b346100e0576103d73660046102d0565b6102cb610998565b346100e0576103ef3660046102d0565b6101746103fa6109a0565b604051918291826001600160a01b03909116815260200190565b906104216102478361020a565b918252565b6104306005610414565b7f352e302e30000000000000000000000000000000000000000000000000000000602082015290565b610108610426565b610108610459565b610108610461565b60005b8381106104845750506000910152565b8181015183820152602001610474565b6104b56104be602093610227936104a9815190565b80835293849260200190565b95869101610471565b601f01601f191690565b602080825261010892910190610494565b346100e0576104e93660046102d0565b6101746104f4610469565b604051918291826104c8565b9190916080818403126100e0576105178382610306565b92606082013567ffffffffffffffff81116100e0576101089201610314565b346100e0576101746102f661054c366004610500565b906109d5565b906020828203126100e05761010891610193565b346100e0576102cb610579366004610552565b610c42565b346100e0576102cb610591366004610500565b90610d75565b610108916008021c6001600160a01b031690565b906101089154610597565b610108600060016105ab565b610178610108610108926001600160a01b031690565b610108906105c2565b610108906105d8565b610143906105e1565b6020810192916100f291906105ea565b346100e0576106133660046102d0565b61017461061e6105b6565b604051918291826105f3565b346100e0576102cb61063d366004610552565b610ea1565b906100f29161064f610eaa565b906100f29161065d81610f59565b610f83565b906100f291610642565b6101089061067861109d565b6106b3565b6101086101086101089290565b6101087f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61067d565b5061010861068a565b610108600061066c565b3561010881610184565b35610108816100d7565b6106e46027610414565b7f4465706f7369746f72792e756e6c6f636b28756e6c6f636b65722c206d65746160208201527f526f757465722900000000000000000000000000000000000000000000000000604082015290565b6101086106da565b903590601e1936829003018212156100e0570180359067ffffffffffffffff82116100e057602001913682900383136100e057565b50610108906020810190610193565b506101089060208101906100e5565b9060406107cf6100f2936107af6107a86000830183610770565b85906105ea565b6107c66107bf602083018361077f565b6020860152565b8281019061077f565b910152565b91906104be816107eb816102279560209181520190565b809561022b565b949293610108969461081d61082a9461081360c08a019560008b01906105ea565b602089019061078e565b86830360808801526107d4565b9260a08185039101526107d4565b6040513d6000823e3d90fd5b61084e8282611183565b61088661085a826106c6565b61087461086f6001546001600160a01b031690565b6105e1565b610880602085016106d0565b91611259565b6108c261086f836108bd61089a83836106c6565b6108af61086f6001546001600160a01b031690565b906108b8610733565b6112e4565b6106c6565b906108e36108d86001546001600160a01b031690565b93602081019061073b565b959093833b156100e0576109326000969287936108ff60405190565b998a98899788967f22c0bff8000000000000000000000000000000000000000000000000000000008852600488016107f2565b03925af1801561095b576109435750565b6100f290600061095381836101cf565b8101906102d0565b610838565b61096861133e565b6100f2610986565b6101786101086101089290565b61010890610970565b6100f2610993600061097d565b611394565b6100f2610960565b61010860007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b01546001600160a01b031690565b610108919061140d565b6101089060401c610114565b61010890546109df565b610108905b67ffffffffffffffff1690565b61010890546109f5565b6109fa6101086101089290565b9067ffffffffffffffff905b9181191691161790565b6109fa6101086101089267ffffffffffffffff1690565b90610a5b610108610a6292610a34565b8254610a1e565b9055565b9068ff00000000000000009060401b610a2a565b90610a8a610108610a6292151590565b8254610a66565b61014390610a11565b6020810192916100f29190610a91565b610ab2611454565b9081610acd610ac7610ac3836109eb565b1590565b91610a07565b90600092610ada84610a11565b67ffffffffffffffff84161480610bf9575b600193610b09610afb86610a11565b9167ffffffffffffffff1690565b149081610bd1575b155b9081610bc8575b50610b9a57610b439082610b3a86610b3187610a11565b98019788610a4b565b610b8b57610c26565b610b4c57505050565b610b7a610b86927fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d294610a7a565b60405191829182610a9a565b0390a1565b610b958487610a7a565b610c26565b7ff92ee8a90000000000000000000000000000000000000000000000000000000084528380600481015b0390fd5b15905038610b1a565b9050610b13610bdf306105e1565b3b610bf0610bec8861067d565b9190565b14919050610b11565b5081610aec565b906001600160a01b0390610a2a565b90610c1f610108610a62926105e1565b8254610c00565b6100f290610c3333611471565b610c3b611482565b6001610c0f565b6100f290610aaa565b61010890610114565b6101089054610c4b565b15610c6557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6465706f73697420616c726561647920657869737473000000000000000000006044820152606490fd5b9060ff90610a2a565b90610cdd610108610a6292151590565b8254610cc4565b9035601e1936839003018112156100e057016020813591019167ffffffffffffffff82116100e0573682900383136100e057565b610108916040810191610d4390610d39610d328280610770565b84906105ea565b6020810190610ce4565b9160208185039101526107d4565b9161010892610d686080820193600083019061078e565b6060818403910152610d18565b907fbb3817ab7fef6fba44a81e5959917aa992d92c518017cff2c8f68f7bc2a4ffc790610e15610da5828561140d565b610dce610db1866106c6565b610dba306105e1565b610dc6602089016106d0565b9133906114ae565b610df6610df1610ac3610dec84600090600052602052604060002090565b610c54565b610c5e565b6101086001610e1083600090600052602052604060002090565b610ccd565b92610e2b610e2260405190565b92839283610d51565b0390a2565b6100f290610e3c61133e565b6000610e478161097d565b6001600160a01b0381166001600160a01b03841614610e6b5750506100f290611394565b7f1e4fbdf70000000000000000000000000000000000000000000000000000000082526001600160a01b03166004820152602490fd5b6100f290610e30565b610eb3306105e1565b7f000000000000000000000000000000000000000000000000000000000000000090610ef06001600160a01b0383165b916001600160a01b031690565b14908115610f2b575b50610f0057565b7fe07c8dba000000000000000000000000000000000000000000000000000000006000908152600490fd5b9050610f48610ee3610f3b6114e4565b926001600160a01b031690565b141538610ef9565b506100f261133e565b6100f290610f50565b905051906100f2826100d7565b906020828203126100e05761010891610f62565b90610f9061086f836105e1565b906020610f9c60405190565b7f52d1902d00000000000000000000000000000000000000000000000000000000815292839060049082905afa6000928161106c575b5061101d5750506001610fe25750565b7f4c9c8ce30000000000000000000000000000000000000000000000000000000060009081526001600160a01b039091166004526024036000fd5b90929161102b61010861068a565b840361103c576100f29293506114f4565b7faa1d49a40000000000000000000000000000000000000000000000000000000060009081526004859052602490fd5b61108f91935060203d602011611096575b61108781836101cf565b810190610f6f565b9138610fd2565b503d61107d565b6110a6306105e1565b6110d86001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610ee3565b03610f0057565b156110e657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6465706f736974206973206e6f7420617661696c61626c6500000000000000006044820152606490fd5b91906008610a2a91029161115960ff841b90565b921b90565b919061116f610108610a6293151590565b908354611145565b6100f29160009161115e565b6111cd916111909161140d565b61010860006111b46111af610dec858490600052602052604060002090565b6110df565b6111c8838290600052602052604060002090565b611177565b7f7365d0eabb56c257feb8a9eac21febe335838563118e4e5c6041062d0832b2236111f760405190565b8080610e2b565b6112176112116101089263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6001600160a01b0390911681526040810192916100f29160200152565b61129c60049261128d6100f29561127363a9059cbb6111fe565b9261127d60405190565b968794602086019081520161123c565b602082018103825203836101cf565b611560565b6040906112d56112c36100f29597969460608401908482036000860152610494565b6001600160a01b039097166020830152565b01906001600160a01b03169052565b6113399061132a6100f2946112f860405190565b9485936004602086017ffcec75e0000000000000000000000000000000000000000000000000000000008152016112a1565b602082018103825203826101cf565b611610565b6113466109a0565b339061135182610ee3565b036113595750565b7f118cdaa70000000000000000000000000000000000000000000000000000000060009081526001600160a01b039091166004526024036000fd5b6113dc6113d67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930061086f846113d083546001600160a01b031690565b92610c0f565b916105e1565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061140760405190565b600090a3565b61143e6101089261143292611420600090565b50604051938492602084019283610d51565b908103825203826101cf565b611450611449825190565b9160200190565b2090565b610108611644565b6100f29061146861164c565b6100f290611694565b6100f29061145c565b6100f261164c565b6100f261147a565b6001600160a01b039182168152911660208201526060810192916100f29160400152565b9061129c9061128d6100f2956004956114ca6323b872dd6111fe565b936114d460405190565b978895602087019081520161148a565b61010860006109c761010861068a565b906114fe8261169d565b611507826105e1565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b61153160405190565b600090a28051611544610bec600061067d565b1115611556576115539161175c565b50565b50506100f2611701565b90600060209161156e600090565b50828151910182855af115610838573d90600051600092611591610bec8561067d565b036115fc57506115a0816105e1565b3b6115ad610bec8461067d565b145b6115b7575050565b610bc46115c483926105e1565b7f5274afe70000000000000000000000000000000000000000000000000000000083526001600160a01b031660048301526024820190565b611609610bec600161067d565b14156115af565b6100f29060016118a7565b6101087ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061067d565b61010861161b565b611657610ac36117a5565b61165d57565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000006000908152600490fd5b6100f290610e3c61164c565b6100f290611688565b6000813b6116ad610bec8361067d565b146116c857906100f2916116c261010861068a565b01610c0f565b7f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602490fd5b600061170c8161067d565b34116117155750565b7fb398979f000000000000000000000000000000000000000000000000000000008152600490fd5b3d156117575761174c3d610414565b903d6000602084013e565b606090565b6000806101089361176b606090565b50602081519101845af461177d61173d565b916117b8565b600080916117996a636f6e736f6c652e6c6f6790565b602082519201905afa50565b61010860006117b2611454565b016109eb565b906117c35750611830565b8151906000916117d5610bec8461067d565b148061181b575b6117e557505090565b7f9996b3150000000000000000000000000000000000000000000000000000000082526001600160a01b03166004820152602490fd5b50803b61182a610bec8461067d565b146117dc565b8051600090611841610bec8361067d565b11156118505750805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000008152600490fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b600103611878576100f29061178356fea264697066735822122012f2d86bc34732f6e7d59f5cd49ee8bd820509de917fae5c0dd87c6384fbc80364736f6c634300081c0033'

type DepositoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: DepositoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class Depository__factory extends ContractFactory {
    constructor(...args: DepositoryConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'Depository'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Depository> {
        return super.deploy(overrides || {}) as Promise<Depository>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): Depository {
        return super.attach(address) as Depository
    }
    connect(signer: Signer): Depository__factory {
        return super.connect(signer) as Depository__factory
    }
    static readonly contractName: 'Depository'
    public readonly contractName: 'Depository'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): DepositoryInterface {
        return new utils.Interface(_abi) as DepositoryInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): Depository {
        return new Contract(address, _abi, signerOrProvider) as Depository
    }
}
