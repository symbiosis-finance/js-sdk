/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Depository, DepositoryInterface } from '../Depository'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'target',
                type: 'address',
            },
        ],
        name: 'AddressEmptyCode',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'DepositID',
                name: 'id',
                type: 'bytes32',
            },
        ],
        name: 'DepositExists',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'DepositID',
                name: 'id',
                type: 'bytes32',
            },
        ],
        name: 'DepositUnavailable',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'ERC1967InvalidImplementation',
        type: 'error',
    },
    {
        inputs: [],
        name: 'ERC1967NonPayable',
        type: 'error',
    },
    {
        inputs: [],
        name: 'FailedCall',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidInitialization',
        type: 'error',
    },
    {
        inputs: [],
        name: 'NotInitializing',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'OwnableInvalidOwner',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'OwnableUnauthorizedAccount',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
        ],
        name: 'SafeERC20FailedOperation',
        type: 'error',
    },
    {
        inputs: [],
        name: 'UUPSUnauthorizedCallContext',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'slot',
                type: 'bytes32',
            },
        ],
        name: 'UUPSUnsupportedProxiableUUID',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'DepositID',
                name: 'depositID',
                type: 'bytes32',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                indexed: false,
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'unlocker',
                type: 'tuple',
            },
        ],
        name: 'DepositLocked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'DepositID',
                name: 'depositID',
                type: 'bytes32',
            },
        ],
        name: 'DepositUnlocked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint64',
                name: 'version',
                type: 'uint64',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'Upgraded',
        type: 'event',
    },
    {
        inputs: [],
        name: 'UPGRADE_INTERFACE_VERSION',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'd',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'u',
                type: 'tuple',
            },
        ],
        name: 'depositID',
        outputs: [
            {
                internalType: 'DepositID',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'DepositID',
                name: '',
                type: 'bytes32',
            },
        ],
        name: 'deposits',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IMetaRouter',
                name: '_metaRouter',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'unlocker',
                type: 'tuple',
            },
        ],
        name: 'lock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'metaRouter',
        outputs: [
            {
                internalType: 'contract IMetaRouter',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'proxiableUUID',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IDepositUnlocker',
                        name: 'unlocker',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'condition',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct DepositoryTypes.Unlocker',
                name: 'unlocker',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newImplementation',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'upgradeToAndCall',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
]

const _bytecode =
    '0x60a060405234602f57600e6033565b6040516117fa61007f8239608051818181610e50015261104901526117fa90f35b5f80fd5b6039603b565b565b603960396072565b6055906058906001600160a01b031682565b90565b6001600160a01b031690565b6055906043565b6055906064565b607930606b565b60805256fe60806040526004361015610011575f80fd5b5f3560e01c80633d4dff7b146100d05780634f1ef286146100cb57806352d1902d146100c6578063595a5cd7146100c1578063715018a6146100bc5780638da5cb5b146100b7578063ad3cb1cc146100b2578063b523051e146100ad578063c4d66de8146100a8578063d2563133146100a3578063dbec15bb1461009e5763f2fde38b036100de57610607565b6105e0565b61055c565b610544565b610514565b6104b7565b6103d5565b6103bd565b6103a1565b6102d1565b6102ae565b610141565b805b036100de57565b5f80fd5b905035906100ef826100d5565b565b906020828203126100de57610105916100e2565b90565b610105916008021c5b60ff1690565b906101059154610108565b5f6101386101059282905f5260205260405f2090565b610117565b9052565b346100de5761016e61015c6101573660046100f1565b610122565b60405191829182901515815260200190565b0390f35b6001600160a01b031690565b6001600160a01b0381166100d7565b905035906100ef8261017e565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff8211176101e957604052565b61019a565b906100ef6101fb60405190565b92836101c7565b67ffffffffffffffff81116101e957602090601f01601f19160190565b0190565b90825f939282370152565b9092919261024361023e82610202565b6101ee565b93818552818301116100de576100ef916020850190610223565b9080601f830112156100de578160206101059335910161022e565b9190916040818403126100de5761028f838261018d565b92602082013567ffffffffffffffff81116100de57610105920161025d565b6102c26102bc366004610278565b9061063f565b604051005b5f9103126100de57565b346100de576102e13660046102c7565b61016e6102ec610699565b6040519182918290815260200190565b908160609103126100de5790565b908160409103126100de5790565b909182601f830112156100de5781359167ffffffffffffffff83116100de5760200192600183028401116100de57565b9160a0838303126100de5761035d82846102fc565b92606081013567ffffffffffffffff81116100de578361037e91830161030a565b92608082013567ffffffffffffffff81116100de5761039d9201610318565b9091565b346100de576102c26103b4366004610348565b9291909161081d565b346100de576103cd3660046102c7565b6102c261096e565b346100de576103e53660046102c7565b61016e6103f0610976565b604051918291826001600160a01b03909116815260200190565b9061041761023e83610202565b918252565b610426600561040a565b7f352e302e30000000000000000000000000000000000000000000000000000000602082015290565b61010561041c565b61010561044f565b610105610457565b90825f9392825e0152565b61049361049c60209361021f93610487815190565b80835293849260200190565b95869101610467565b601f01601f191690565b602080825261010592910190610472565b346100de576104c73660046102c7565b61016e6104d261045f565b604051918291826104a6565b9190916080818403126100de576104f583826102fc565b92606082013567ffffffffffffffff81116100de57610105920161030a565b346100de5761016e6102ec61052a3660046104de565b906109aa565b906020828203126100de576101059161018d565b346100de576102c2610557366004610530565b610c11565b346100de576102c261056f3660046104de565b90610d15565b610105916008021c6001600160a01b031690565b906101059154610575565b6101055f6001610589565b610172610105610105926001600160a01b031690565b6101059061059f565b610105906105b5565b61013d906105be565b6020810192916100ef91906105c7565b346100de576105f03660046102c7565b61016e6105fb610594565b604051918291826105d0565b346100de576102c261061a366004610530565b610e3c565b906100ef9161062c610e45565b906100ef9161063a81610ef3565b610f1d565b906100ef9161061f565b61010590610655611033565b610690565b6101056101056101059290565b6101057f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61065a565b50610105610667565b6101055f610649565b356101058161017e565b35610105816100d5565b6106c0602761040a565b7f4465706f7369746f72792e756e6c6f636b28756e6c6f636b65722c206d65746160208201527f526f757465722900000000000000000000000000000000000000000000000000604082015290565b6101056106b6565b903590601e1936829003018212156100de570180359067ffffffffffffffff82116100de57602001913682900383136100de57565b5061010590602081019061018d565b506101059060208101906100e2565b9060406107aa6100ef9361078a6107835f83018361074c565b85906105c7565b6107a161079a602083018361075b565b6020860152565b8281019061075b565b910152565b919061049c816107c68161021f9560209181520190565b8095610223565b94929361010596946107f7610804946107ed60c08a01955f8b01906105c7565b602089019061076a565b86830360808801526107af565b9260a08185039101526107af565b6040513d5f823e3d90fd5b61082782826110ea565b61085f610833826106a2565b61084d6108486001546001600160a01b031690565b6105be565b610859602085016106ac565b916111bc565b61089b6108488361089661087383836106a2565b6108886108486001546001600160a01b031690565b9061089161070f565b611246565b6106a2565b906108bc6108b16001546001600160a01b031690565b936020810190610717565b959093833b156100de5761090a5f969287936108d760405190565b998a98899788967f22c0bff8000000000000000000000000000000000000000000000000000000008852600488016107cd565b03925af180156109325761091b5750565b6100ef905f61092a81836101c7565b8101906102c7565b610812565b61093f6112a0565b6100ef61095d565b6101726101056101059290565b61010590610947565b6100ef6109695f610954565b6112f4565b6100ef610937565b6101055f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b01546001600160a01b031690565b610105919061136c565b6101059060401c610111565b61010590546109b4565b610105905b67ffffffffffffffff1690565b61010590546109ca565b6109cf6101056101059290565b9067ffffffffffffffff905b9181191691161790565b6109cf6101056101059267ffffffffffffffff1690565b90610a30610105610a3792610a09565b82546109f3565b9055565b9068ff00000000000000009060401b6109ff565b90610a5f610105610a3792151590565b8254610a3b565b61013d906109e6565b6020810192916100ef9190610a66565b610a876113b2565b80610aa1610a9b610a97836109c0565b1590565b916109dc565b92610aab5f6109e6565b67ffffffffffffffff85161480610bc8575b600194610ada610acc876109e6565b9167ffffffffffffffff1690565b149081610ba0575b155b9081610b97575b50610b6b57610b149082610b0b5f610b02886109e6565b96019586610a20565b610b5c57610bf5565b610b1c575050565b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291610b4b5f610b5793610a4f565b60405191829182610a6f565b0390a1565b610b668585610a4f565b610bf5565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f90815260045b035ffd5b1590505f610aeb565b9050610ae4610bae306105be565b3b610bbf610bbb5f61065a565b9190565b14919050610ae2565b5081610abd565b906001600160a01b03906109ff565b90610bee610105610a37926105be565b8254610bcf565b6100ef90610c02336113cf565b610c0a6113e0565b6001610bde565b6100ef90610a7f565b61010590610111565b6101059054610c1a565b15610c355750565b7fb0fe2b3f000000000000000000000000000000000000000000000000000000005f908152600491909152602490fd5b9060ff906109ff565b90610c7e610105610a3792151590565b8254610c65565b9035601e1936839003018112156100de57016020813591019167ffffffffffffffff82116100de573682900383136100de57565b610105916040810191610ce490610cda610cd3828061074c565b84906105c7565b6020810190610c85565b9160208185039101526107af565b9161010592610d0860808201935f83019061076a565b6060818403910152610cb9565b907fbb3817ab7fef6fba44a81e5959917aa992d92c518017cff2c8f68f7bc2a4ffc790610db0610d45828561136c565b610d6e610d51866106a2565b610d5a306105be565b610d66602089016106ac565b91339061140c565b610d9481610d8f610a97610d8a835f905f5260205260405f2090565b610c23565b610c2d565b6101056001610dab835f905f5260205260405f2090565b610c6e565b92610dc6610dbd60405190565b92839283610cf2565b0390a2565b6100ef90610dd76112a0565b610de05f610954565b6001600160a01b0381166001600160a01b03831614610e0357506100ef906112f4565b7f1e4fbdf7000000000000000000000000000000000000000000000000000000005f9081526001600160a01b039091166004526024035ffd5b6100ef90610dcb565b610e4e306105be565b7f000000000000000000000000000000000000000000000000000000000000000090610e8b6001600160a01b0383165b916001600160a01b031690565b14908115610ec5575b50610e9b57565b7fe07c8dba000000000000000000000000000000000000000000000000000000005f908152600490fd5b9050610ee2610e7e610ed5611442565b926001600160a01b031690565b14155f610e94565b506100ef6112a0565b6100ef90610eea565b905051906100ef826100d5565b906020828203126100de5761010591610efc565b90610f2a610848836105be565b906020610f3660405190565b7f52d1902d00000000000000000000000000000000000000000000000000000000815292839060049082905afa5f9281611002575b50610fb45750506001610f7b5750565b7f4c9c8ce3000000000000000000000000000000000000000000000000000000005f9081526001600160a01b039091166004526024035ffd5b909291610fc2610105610667565b8403610fd3576100ef929350611451565b7faa1d49a4000000000000000000000000000000000000000000000000000000005f9081526004859052602490fd5b61102591935060203d60201161102c575b61101d81836101c7565b810190610f09565b915f610f6b565b503d611013565b61103c306105be565b61106e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e7e565b03610e9b57565b1561107d5750565b7f78b83bac000000000000000000000000000000000000000000000000000000005f908152600491909152602490fd5b919060086109ff9102916110c160ff841b90565b921b90565b91906110d7610105610a3793151590565b9083546110ad565b6100ef915f916110c6565b611130916110f79161136c565b61111581611110610d8a825f905f5260205260405f2090565b611075565b6101055f61112b8382905f5260205260405f2090565b6110df565b7f7365d0eabb56c257feb8a9eac21febe335838563118e4e5c6041062d0832b22361115a60405190565b8080610dc6565b61117a6111746101059263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6001600160a01b0390911681526040810192916100ef9160200152565b6111ff6004926111f06100ef956111d663a9059cbb611161565b926111e060405190565b968794602086019081520161119f565b602082018103825203836101c7565b6114bb565b6040906112376112256100ef9597969460608401908482035f860152610472565b6001600160a01b039097166020830152565b01906001600160a01b03169052565b61129b9061128c6100ef9461125a60405190565b9485936004602086017ffcec75e000000000000000000000000000000000000000000000000000000000815201611204565b602082018103825203826101c7565b611564565b6112a8610976565b33906112b382610e7e565b036112bb5750565b7f118cdaa7000000000000000000000000000000000000000000000000000000005f9081526001600160a01b039091166004526024035ffd5b61133c6113367f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993006108488461133083546001600160a01b031690565b92610bde565b916105be565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061136760405190565b5f90a3565b61139c610105926113909261137e5f90565b50604051938492602084019283610cf2565b908103825203826101c7565b6113ae6113a7825190565b9160200190565b2090565b610105611598565b6100ef906113c66115a0565b6100ef906115e7565b6100ef906113ba565b6100ef6115a0565b6100ef6113d8565b6001600160a01b039182168152911660208201526060810192916100ef9160400152565b906111ff906111f06100ef956004956114286323b872dd611161565b9361143260405190565b97889560208701908152016113e8565b6101055f61099c610105610667565b9061145b826115f0565b611464826105be565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b61148e60405190565b5f90a2805161149f610bbb5f61065a565b11156114b1576114ae91611672565b50565b50506100ef611619565b905f6020916114c75f90565b50828151910182855af115610812573d5f51906114e6610bbb5f61065a565b0361155057506114f5816105be565b3b611502610bbb5f61065a565b145b61150b5750565b610b936115185f926105be565b7f5274afe70000000000000000000000000000000000000000000000000000000083526001600160a01b031660048301526024820190565b61155d610bbb600161065a565b1415611504565b6100ef9060016117b4565b6101057ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061065a565b61010561156f565b6115ab610a976116b9565b6115b157565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f908152600490fd5b6100ef90610dd76115a0565b6100ef906115db565b803b6115fe610bbb5f61065a565b14610f7b576100ef905f611613610105610667565b01610bde565b6116225f61065a565b341161162a57565b7fb398979f000000000000000000000000000000000000000000000000000000005f908152600490fd5b3d1561166d576116633d61040a565b903d5f602084013e565b606090565b5f8061010593611680606090565b50602081519101845af4611692611654565b916116cb565b5f80916116ad6a636f6e736f6c652e6c6f6790565b602082519201905afa50565b6101055f6116c56113b2565b016109c0565b906116d65750611741565b81516116e4610bbb5f61065a565b148061172c575b6116f3575090565b7f9996b315000000000000000000000000000000000000000000000000000000005f9081526001600160a01b039091166004526024035ffd5b50803b61173b610bbb5f61065a565b146116eb565b805161174f610bbb5f61065a565b111561175d57805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f908152600490fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffd5b600103611787576100ef9061169856fea2646970667358221220886dea5d57d9d582f0f6d6738b8c7357187bca12d125f10cbda92996d2e7365064736f6c634300081c0033'

type DepositoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: DepositoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class Depository__factory extends ContractFactory {
    constructor(...args: DepositoryConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'Depository'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Depository> {
        return super.deploy(overrides || {}) as Promise<Depository>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): Depository {
        return super.attach(address) as Depository
    }
    connect(signer: Signer): Depository__factory {
        return super.connect(signer) as Depository__factory
    }
    static readonly contractName: 'Depository'
    public readonly contractName: 'Depository'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): DepositoryInterface {
        return new utils.Interface(_abi) as DepositoryInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): Depository {
        return new Contract(address, _abi, signerOrProvider) as Depository
    }
}
