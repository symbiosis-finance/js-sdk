/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IRouter, IRouterInterface } from '../IRouter.js'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'target',
                type: 'address',
            },
        ],
        name: 'CallToNonContract',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_token',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: '_receiveSide',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: '_calldata',
                type: 'bytes',
            },
            {
                internalType: 'uint256',
                name: '_offset',
                type: 'uint256',
            },
        ],
        name: 'externalCall',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IWETH',
                name: 'token',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferNative',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

export class IRouter__factory {
    static readonly abi = _abi
    static createInterface(): IRouterInterface {
        return new utils.Interface(_abi) as IRouterInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): IRouter {
        return new Contract(address, _abi, signerOrProvider) as IRouter
    }
}
