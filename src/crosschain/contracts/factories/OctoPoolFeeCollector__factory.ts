/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { OctoPoolFeeCollector, OctoPoolFeeCollectorInterface } from '../OctoPoolFeeCollector'

const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: '_feeReceiver',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_feeRate',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'to',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
            },
        ],
        name: 'ClaimedTokens',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'fee',
                type: 'uint256',
            },
        ],
        name: 'FeeCollected',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'WAD',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_newFeeRate',
                type: 'uint256',
            },
        ],
        name: 'changeFeeRate',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: 'token',
                type: 'address',
            },
        ],
        name: 'collectFee',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'feeRate',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'feeReceiver',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_newFeeReceiver',
                type: 'address',
            },
        ],
        name: 'setFeeReceiver',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x6080604052670de0b6b3a764000060035534801561001c57600080fd5b50604051610b0a380380610b0a83398101604081905261003b916100bc565b6100443361006c565b600155600280546001600160a01b0319166001600160a01b03929092169190911790556100f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100cf57600080fd5b82516001600160a01b03811681146100e657600080fd5b6020939093015192949293505050565b610a05806101056000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063978bbdb911610076578063b3f006741161005b578063b3f0067414610122578063efdcd97414610135578063f2fde38b1461014857600080fd5b8063978bbdb914610106578063affca9321461010f57600080fd5b80636a146024146100a8578063715018a6146100c45780637ff7b0d2146100ce5780638da5cb5b146100e1575b600080fd5b6100b160035481565b6040519081526020015b60405180910390f35b6100cc61015b565b005b6100cc6100dc366004610840565b6101c6565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100bb565b6100b160015481565b6100cc61011d36600461086c565b61026c565b6002546100ee906001600160a01b031681565b6100cc610143366004610885565b6102cb565b6100cc610156366004610885565b61035f565b6000546001600160a01b031633146101ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101c46000610441565b565b6101d2813330856104a9565b6000600354600154846101e591906108cf565b6101ef91906108ec565b905061020582336102008487610927565b610560565b60025461021d9083906001600160a01b031683610560565b604080516001600160a01b0384168152602081018590529081018290527f108516ddcf5ba43cea6bb2cd5ff6d59ac196c1c86ccb9178332b9dd72d1ca5619060600160405180910390a1505050565b6000546001600160a01b031633146102c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b1565b600155565b6000546001600160a01b031633146103255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b1565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b1565b6001600160a01b0381166104355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101b1565b61043e81610441565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261055a9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526105ae565b50505050565b6040516001600160a01b0383166024820152604481018290526105a99084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016104f6565b505050565b6000610603826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106939092919063ffffffff16565b8051909150156105a95780806020019051810190610621919061093a565b6105a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101b1565b60606106a284846000856106ac565b90505b9392505050565b6060824710156107245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101b1565b843b6107725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101b1565b600080866001600160a01b0316858760405161078e9190610980565b60006040518083038185875af1925050503d80600081146107cb576040519150601f19603f3d011682016040523d82523d6000602084013e6107d0565b606091505b50915091506107e08282866107eb565b979650505050505050565b606083156107fa5750816106a5565b82511561080a5782518084602001fd5b8160405162461bcd60e51b81526004016101b1919061099c565b80356001600160a01b038116811461083b57600080fd5b919050565b6000806040838503121561085357600080fd5b8235915061086360208401610824565b90509250929050565b60006020828403121561087e57600080fd5b5035919050565b60006020828403121561089757600080fd5b6106a582610824565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176108e6576108e66108a0565b92915050565b600082610922577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b818103818111156108e6576108e66108a0565b60006020828403121561094c57600080fd5b815180151581146106a557600080fd5b60005b8381101561097757818101518382015260200161095f565b50506000910152565b6000825161099281846020870161095c565b9190910192915050565b60208152600082518060208401526109bb81604085016020870161095c565b601f01601f1916919091016040019291505056fea264697066735822122066d7925f09ed4bc46642455b4e2bc57639e34c77f22523edc1ebc237299aecab64736f6c63430008130033'

type OctoPoolFeeCollectorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OctoPoolFeeCollectorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class OctoPoolFeeCollector__factory extends ContractFactory {
    constructor(...args: OctoPoolFeeCollectorConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'OctoPoolFeeCollector'
    }

    deploy(
        _feeReceiver: string,
        _feeRate: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<OctoPoolFeeCollector> {
        return super.deploy(_feeReceiver, _feeRate, overrides || {}) as Promise<OctoPoolFeeCollector>
    }
    getDeployTransaction(
        _feeReceiver: string,
        _feeRate: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_feeReceiver, _feeRate, overrides || {})
    }
    attach(address: string): OctoPoolFeeCollector {
        return super.attach(address) as OctoPoolFeeCollector
    }
    connect(signer: Signer): OctoPoolFeeCollector__factory {
        return super.connect(signer) as OctoPoolFeeCollector__factory
    }
    static readonly contractName: 'OctoPoolFeeCollector'
    public readonly contractName: 'OctoPoolFeeCollector'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): OctoPoolFeeCollectorInterface {
        return new utils.Interface(_abi) as OctoPoolFeeCollectorInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): OctoPoolFeeCollector {
        return new Contract(address, _abi, signerOrProvider) as OctoPoolFeeCollector
    }
}
