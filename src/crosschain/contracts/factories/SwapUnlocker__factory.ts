/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { SwapUnlocker, SwapUnlockerInterface } from '../SwapUnlocker.js'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'available',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'required',
                type: 'uint256',
            },
        ],
        name: 'InsufficientOutAmount',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'outToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'outMinAmount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'target',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'targetCalldata',
                        type: 'bytes',
                    },
                    {
                        internalType: 'uint256',
                        name: 'targetOffset',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct SwapUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'outToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'outMinAmount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'target',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'targetCalldata',
                        type: 'bytes',
                    },
                    {
                        internalType: 'uint256',
                        name: 'targetOffset',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct SwapUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'swapper',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'swapCalldata',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct SwapUnlocker.Solution',
                name: 's',
                type: 'tuple',
            },
        ],
        name: 'encodeSolution',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IRouter',
                name: 'router',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'blockNumber',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'timestamp',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.BlockchainState',
                name: 'lockState',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const

const _bytecode =
    ''

type SwapUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SwapUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class SwapUnlocker__factory extends ContractFactory {
    constructor(...args: SwapUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(overrides?: Overrides & { from?: string }): Promise<SwapUnlocker> {
        return super.deploy(overrides || {}) as Promise<SwapUnlocker>
    }
    override getDeployTransaction(overrides?: Overrides & { from?: string }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): SwapUnlocker {
        return super.attach(address) as SwapUnlocker
    }
    override connect(signer: Signer): SwapUnlocker__factory {
        return super.connect(signer) as SwapUnlocker__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): SwapUnlockerInterface {
        return new utils.Interface(_abi) as SwapUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): SwapUnlocker {
        return new Contract(address, _abi, signerOrProvider) as SwapUnlocker
    }
}
