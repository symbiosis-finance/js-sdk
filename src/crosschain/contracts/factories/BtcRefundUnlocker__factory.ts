/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BtcRefundUnlocker, BtcRefundUnlockerInterface } from '../BtcRefundUnlocker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'contract ISynthesis',
                name: '_synthesis',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'refundAddress',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'refundAddress',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'bytes32',
                        name: 'clientID',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Solution',
                name: 's',
                type: 'tuple',
            },
        ],
        name: 'encodeSolution',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [],
        name: 'synthesis',
        outputs: [
            {
                internalType: 'contract ISynthesis',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IRouter',
                name: 'router',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'blockNumber',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'timestamp',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.BlockchainState',
                name: '',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x60806040523461002a576100196100146100bf565b610133565b604051610b2c61013e8239610b2c90f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b90601f01601f191681019081106001600160401b0382111761006357604052565b61002e565b9061007c61007560405190565b9283610042565b565b6001600160a01b031690565b90565b6001600160a01b0381160361002a57565b9050519061007c8261008d565b9060208282031261002a5761008a9161009e565b61008a610c6a803803806100d281610068565b9283398101906100ab565b61008a9061007e906001600160a01b031682565b61008a906100dd565b61008a906100f1565b9061011361008a61012f926100fa565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b61007c905f61010356fe60806040526004361015610011575f80fd5b5f3560e01c80632af896fb146100605780634d8893d01461005b578063760bd11814610056578063b9accd0c146100515763c9cd04dc0361006f5761036e565b610321565b6102c6565b610217565b610101565b5f91031261006f57565b5f80fd5b610095916008021c5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b906100959154610073565b6100955f80610098565b61007c6100956100959273ffffffffffffffffffffffffffffffffffffffff1690565b610095906100ad565b610095906100d0565b6100eb906100d9565b9052565b6020810192916100ff91906100e2565b565b3461006f57610111366004610065565b61012861011c6100a3565b604051918291826100ef565b0390f35b6100959061007c565b61013e8161012c565b0361006f57565b905035906100ff82610135565b9081606091031261006f5790565b9081604091031261006f5790565b909182601f8301121561006f5781359167ffffffffffffffff831161006f57602001926001830284011161006f57565b90916101008284031261006f576101b58383610145565b926101c38160208501610152565b926101d18260808301610160565b9260c082013567ffffffffffffffff811161006f57836101f291840161016e565b92909360e082013567ffffffffffffffff811161006f57610213920161016e565b9091565b3461006f5761023661022a36600461019e565b9594909493919361061b565b604051005b9060208282031261006f57813567ffffffffffffffff811161006f57610213920161016e565b90825f9392825e0152565b61028d6102966020936102a093610281815190565b80835293849260200190565b95869101610261565b601f01601f191690565b0190565b51602080835261009592019061026c565b6020808252610095929101906102a4565b3461006f576101286102e26102dc36600461023b565b906108df565b604051918291826102b5565b9081602091031261006f5790565b9060208282031261006f57610095916102ee565b60208082526100959291019061026c565b3461006f5761012861033c6103373660046102fc565b610929565b60405191829182610310565b9060208282031261006f57813567ffffffffffffffff811161006f5761009592016102ee565b3461006f5761012861033c610384366004610348565b6109f0565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff8211176103d857604052565b610389565b906100ff6103ea60405190565b92836103b6565b8061013e565b905035906100ff826103f1565b919060208382031261006f57610426905f61041f60206103dd565b94016103f7565b8252565b9060208282031261006f5761009591610404565b610095905461012c565b3561009581610135565b905051906100ff826103f1565b9060208282031261006f5761009591610452565b6100eb9061007c565b6020810192916100ff9190610473565b6040513d5f823e3d90fd5b67ffffffffffffffff81116103d857602090601f01601f19160190565b906104c66104c183610497565b6103dd565b918252565b6104d560366104b4565b7f427463526566756e64556e6c6f636b65722e756e6c6f636b2873796e7468657360208201527f69732c20737461626c654272696467696e674665652900000000000000000000604082015290565b6100956104cb565b35610095816103f1565b61054f6105496100959263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b906105ab6105b6916100ff9698979561059e60809661059760a08801945f890152565b6020870152565b848203604086015261026c565b966060830190610473565b0152565b6100956100956100959290565b6100eb906105ba565b6100ff94610606829897956105fc6080966105f5610613975f60a08901980190610473565b60208c0152565b60408a0190610473565b878203606089015261026c565b9401906105c7565b9261063792505f95919461062e916108df565b9581019061042a565b6106486106438561043e565b6100d9565b9260206106958683019561065e61064388610448565b60405198899384928391907fc7fa2d300000000000000000000000000000000000000000000000000000000083526004830161047c565b03925af19485156107df575f956107e4575b506106b15f61043e565b6106ba906100d9565b856106c3610524565b916106cd92610a38565b602001936106da8561052c565b9551916106e685610448565b6106ef906100d9565b9051906106ff63a0d95570610536565b9361070960405190565b988995602087019081526004019461072095610574565b60208201810382520361073390856103b6565b61073c906100d9565b9061074690610448565b61074f906100d9565b916107599061052c565b906107635f61043e565b61076c906100d9565b91813b1561006f575f80946107b78261078460405190565b988997889687957fe1ee0f79000000000000000000000000000000000000000000000000000000008752600487016105d0565b03925af180156107df576107c85750565b6100ff905f6107d781836103b6565b810190610065565b61048c565b61080791955060203d60201161080e575b6107ff81836103b6565b81019061045f565b935f6106a7565b503d6107f5565b61009560206103dd565b610827610815565b9060608252565b61009561081f565b90825f939282370152565b909291926108516104c182610497565b938185528183011161006f576100ff916020850190610836565b9080601f8301121561006f5781602061009593359101610841565b91909160208184031261006f5761089d60206103dd565b92813567ffffffffffffffff811161006f57610426920161086b565b9060208282031261006f57813567ffffffffffffffff811161006f576100959201610886565b610095916108eb61082e565b508101906108b9565b506100959060208101906103f7565b6100ff91905f9061091490806108f4565b910152565b6020810192916100ff9190610903565b61009561093560405190565b8092610945602083019182610919565b908103825203826103b6565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1368390030181121561006f57016020813591019167ffffffffffffffff821161006f5736829003831361006f57565b9190610296816109ba816102a09560209181520190565b8095610836565b6100959160208101916109d49080610951565b8284039092526109a3565b6020808252610095929101906109c1565b6100956109fc60405190565b80926109456020830191826109df565b6040906105b6610a2d6100ff9597969460608401908482035f86015261026c565b966020830190610473565b610a8d90610a7e6100ff94610a4c60405190565b9485936004602086017f0d26b92500000000000000000000000000000000000000000000000000000000815201610a0c565b602082018103825203826103b6565b6100ff906001610ae6565b5f8091610aad6a636f6e736f6c652e6c6f6790565b602082519201905afa50565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffd5b600103610ab9576100ff90610a9856fea264697066735822122062cd4e6488e64519569fabe1cd8738529f737d156b1c87168664906ab9f9178764736f6c634300081c0033'

type BtcRefundUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: BtcRefundUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class BtcRefundUnlocker__factory extends ContractFactory {
    constructor(...args: BtcRefundUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'BtcRefundUnlocker'
    }

    deploy(
        _synthesis: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BtcRefundUnlocker> {
        return super.deploy(_synthesis, overrides || {}) as Promise<BtcRefundUnlocker>
    }
    getDeployTransaction(
        _synthesis: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_synthesis, overrides || {})
    }
    attach(address: string): BtcRefundUnlocker {
        return super.attach(address) as BtcRefundUnlocker
    }
    connect(signer: Signer): BtcRefundUnlocker__factory {
        return super.connect(signer) as BtcRefundUnlocker__factory
    }
    static readonly contractName: 'BtcRefundUnlocker'
    public readonly contractName: 'BtcRefundUnlocker'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): BtcRefundUnlockerInterface {
        return new utils.Interface(_abi) as BtcRefundUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): BtcRefundUnlocker {
        return new Contract(address, _abi, signerOrProvider) as BtcRefundUnlocker
    }
}
