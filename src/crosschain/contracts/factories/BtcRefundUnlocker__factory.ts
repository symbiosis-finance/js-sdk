/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BtcRefundUnlocker, BtcRefundUnlockerInterface } from '../BtcRefundUnlocker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'contract ISynthesis',
                name: '_synthesis',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'refundAddress',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'refundAddress',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'stableBridgingFee',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'clientID',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Solution',
                name: 's',
                type: 'tuple',
            },
        ],
        name: 'encodeSolution',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [],
        name: 'synthesis',
        outputs: [
            {
                internalType: 'contract ISynthesis',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IMetaRouter',
                name: 'metarouter',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x60806040523461002a576100196100146100bf565b610133565b604051610b3961013e8239610b3990f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b90601f01601f191681019081106001600160401b0382111761006357604052565b61002e565b9061007c61007560405190565b9283610042565b565b6001600160a01b031690565b90565b6001600160a01b0381160361002a57565b9050519061007c8261008d565b9060208282031261002a5761008a9161009e565b61008a610c77803803806100d281610068565b9283398101906100ab565b61008a9061007e906001600160a01b031682565b61008a906100dd565b61008a906100f1565b9061011361008a61012f926100fa565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b61007c905f61010356fe60806040526004361015610011575f80fd5b5f3560e01c806322c0bff8146100605780632af896fb1461005b578063760bd118146100565780638f4d03b4146100515763c9cd04dc036100865761034a565b6102ef565b610294565b6101e2565b610141565b6001600160a01b031690565b90565b6001600160a01b0381165b0361008657565b5f80fd5b9050359061009782610074565b565b908160609103126100865790565b909182601f830112156100865781359167ffffffffffffffff831161008657602001926001830284011161008657565b919060c083820312610086576100ed818461008a565b926100fb8260208301610099565b92608082013567ffffffffffffffff8111610086578361011c9184016100a7565b92909360a082013567ffffffffffffffff81116100865761013d92016100a7565b9091565b34610086576101606101543660046100d7565b949390939291926105d8565b60405180805b0390f35b5f91031261008657565b610071916008021c6001600160a01b031690565b906100719154610174565b6100715f80610188565b610065610071610071926001600160a01b031690565b6100719061019d565b610071906101b3565b6101ce906101bc565b9052565b60208101929161009791906101c5565b34610086576101f236600461016a565b6101666101fd610193565b604051918291826101d2565b9060208282031261008657813567ffffffffffffffff81116100865761013d92016100a7565b90825f9392825e0152565b61025b61026460209361026e9361024f815190565b80835293849260200190565b9586910161022f565b601f01601f191690565b0190565b51602080835261007192019061023a565b602080825261007192910190610272565b34610086576101666102b06102aa366004610209565b9061083d565b60405191829182610283565b908160409103126100865790565b9060408282031261008657610071916102bc565b60208082526100719291019061023a565b346100865761016661030a6103053660046102ca565b61089c565b604051918291826102de565b908160209103126100865790565b9060208282031261008657813567ffffffffffffffff8111610086576100719201610316565b346100865761016661030a610360366004610324565b610963565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff8211176103b457604052565b610365565b906100976103c660405190565b9283610392565b8061007f565b90503590610097826103cd565b91906040838203126100865761040f9060206103fc60406103b9565b9461040783826103d3565b8652016103d3565b6020830152565b9060408282031261008657610071916103e0565b67ffffffffffffffff81116103b457602090601f01601f19160190565b906104596104548361042a565b6103b9565b918252565b6104686036610447565b7f427463526566756e64556e6c6f636b65722e756e6c6f636b2873796e7468657360208201527f69732c20737461626c654272696467696e674665652900000000000000000000604082015290565b61007161045e565b35610071816103cd565b3561007181610074565b6104ec6104e66100719263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b9061054861055a916100979698979561053b60809661053460a08801945f890152565b6020870152565b848203604086015261023a565b6001600160a01b039097166060830152565b0152565b6100716100716100719290565b6101ce9061055e565b610097946105b8829897956105a86080966105a16105c5975f60a089019801906001600160a01b03169052565b60208c0152565b6001600160a01b031660408a0152565b878203606089015261023a565b94019061056b565b6040513d5f823e3d90fd5b94926105e591949261083d565b9181016105f191610416565b926106035f546001600160a01b031690565b61060c906101bc565b849290610617845190565b61061f6104b7565b91610629926109b2565b5f0193845161063790610a0c565b60200191610643835190565b61064c90610a51565b5192602081019361065c856104bf565b95519193610669856104c9565b610672906101bc565b90519061068263a0d955706104d3565b9361068c60405190565b98899560208701908152600401946106a395610511565b6020820181038252036106b69085610392565b6106bf906101bc565b906106c9906104c9565b6106d2906101bc565b916106dc906104bf565b906106ee5f546001600160a01b031690565b6106f7906101bc565b91813b15610086575f80946107428261070f60405190565b988997889687957f3add6d5a00000000000000000000000000000000000000000000000000000000875260048701610574565b03925af1801561076a576107535750565b610097905f6107628183610392565b81019061016a565b6105cd565b61007160206103b9565b61078161076f565b9060608252565b610071610779565b90825f939282370152565b909291926107ab6104548261042a565b938185528183011161008657610097916020850190610790565b9080601f83011215610086578160206100719335910161079b565b919091602081840312610086576107f760206103b9565b92813567ffffffffffffffff81116100865761081392016107c5565b8252565b9060208282031261008657813567ffffffffffffffff81116100865761007192016107e0565b61007191610849610788565b50810190610817565b506100719060208101906103d3565b9060206108876100979361087e61087a5f830183610852565b8552565b82810190610852565b910152565b6040810192916100979190610861565b6100716108a860405190565b80926108b860208301918261088c565b90810382520382610392565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1368390030181121561008657016020813591019167ffffffffffffffff82116100865736829003831361008657565b91906102648161092d8161026e9560209181520190565b8095610790565b61007191602081019161094790806108c4565b828403909252610916565b602080825261007192910190610934565b61007161096f60405190565b80926108b8602083019182610952565b60409061055a6109a06100979597969460608401908482035f86015261023a565b6001600160a01b039097166020830152565b610a07906109f8610097946109c660405190565b9485936004602086017f0d26b9250000000000000000000000000000000000000000000000000000000081520161097f565b60208201810382520382610392565b610a9a565b6109f8610a0761009792610a1f60405190565b9283916004602084017f0be77f56000000000000000000000000000000000000000000000000000000008152016102de565b6109f8610a0761009792610a6460405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b610097906001610af3565b5f8091610aba6a636f6e736f6c652e6c6f6790565b602082519201905afa50565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffd5b600103610ac65761009790610aa556fea2646970667358221220ed2cc24612cb493a7bf284eded1eed553a567e277a1e2322c175ca6e6033f1aa64736f6c634300081c0033'

type BtcRefundUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: BtcRefundUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class BtcRefundUnlocker__factory extends ContractFactory {
    constructor(...args: BtcRefundUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'BtcRefundUnlocker'
    }

    deploy(
        _synthesis: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BtcRefundUnlocker> {
        return super.deploy(_synthesis, overrides || {}) as Promise<BtcRefundUnlocker>
    }
    getDeployTransaction(
        _synthesis: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_synthesis, overrides || {})
    }
    attach(address: string): BtcRefundUnlocker {
        return super.attach(address) as BtcRefundUnlocker
    }
    connect(signer: Signer): BtcRefundUnlocker__factory {
        return super.connect(signer) as BtcRefundUnlocker__factory
    }
    static readonly contractName: 'BtcRefundUnlocker'
    public readonly contractName: 'BtcRefundUnlocker'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): BtcRefundUnlockerInterface {
        return new utils.Interface(_abi) as BtcRefundUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): BtcRefundUnlocker {
        return new Contract(address, _abi, signerOrProvider) as BtcRefundUnlocker
    }
}
