/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BtcRefundUnlocker, BtcRefundUnlockerInterface } from '../BtcRefundUnlocker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'contract ISynthesis',
                name: '_synthesis',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'refundAddress',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'refundAddress',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'stableBridgingFee',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'clientID',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct BtcRefundUnlocker.Solution',
                name: 's',
                type: 'tuple',
            },
        ],
        name: 'encodeSolution',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [],
        name: 'synthesis',
        outputs: [
            {
                internalType: 'contract ISynthesis',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IMetaRouter',
                name: 'metarouter',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x60806040523461002a576100196100146100c2565b610136565b604051610b666101428239610b6690f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006657604052565b61002f565b9061007f61007860405190565b9283610045565b565b6001600160a01b031690565b90565b6001600160a01b0381160361002a57565b9050519061007f82610090565b9060208282031261002a5761008d916100a1565b61008d610ca8803803806100d58161006b565b9283398101906100ae565b61008d90610081906001600160a01b031682565b61008d906100e0565b61008d906100f4565b9061011661008d610132926100fd565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b61007f90600061010656fe6080604052600436101561001257600080fd5b60003560e01c806322c0bff8146100625780632af896fb1461005d578063760bd118146100585780638f4d03b4146100535763c9cd04dc0361008857610367565b61030c565b6102b1565b6101e7565b610144565b6001600160a01b031690565b90565b6001600160a01b0381165b0361008857565b600080fd5b9050359061009a82610076565b565b908160609103126100885790565b909182601f830112156100885781359167ffffffffffffffff831161008857602001926001830284011161008857565b919060c083820312610088576100f0818461008d565b926100fe826020830161009c565b92608082013567ffffffffffffffff8111610088578361011f9184016100aa565b92909360a082013567ffffffffffffffff81116100885761014092016100aa565b9091565b34610088576101636101573660046100da565b949390939291926105fa565b60405180805b0390f35b600091031261008857565b610073916008021c6001600160a01b031690565b906100739154610178565b61007360008061018c565b610067610073610073926001600160a01b031690565b610073906101a2565b610073906101b8565b6101d3906101c1565b9052565b60208101929161009a91906101ca565b34610088576101f736600461016d565b610169610202610197565b604051918291826101d7565b9060208282031261008857813567ffffffffffffffff81116100885761014092016100aa565b60005b8381106102475750506000910152565b8181015183820152602001610237565b61027861028160209361028b9361026c815190565b80835293849260200190565b95869101610234565b601f01601f191690565b0190565b516020808352610073920190610257565b60208082526100739291019061028f565b34610088576101696102cd6102c736600461020e565b90610865565b604051918291826102a0565b908160409103126100885790565b9060408282031261008857610073916102d9565b602080825261007392910190610257565b34610088576101696103276103223660046102e7565b6108c5565b604051918291826102fb565b908160209103126100885790565b9060208282031261008857813567ffffffffffffffff8111610088576100739201610333565b346100885761016961032761037d366004610341565b61098c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176103d357604052565b610382565b9061009a6103e560405190565b92836103b1565b80610081565b9050359061009a826103ec565b91906040838203126100885761042e90602061041b60406103d8565b9461042683826103f2565b8652016103f2565b6020830152565b9060408282031261008857610073916103ff565b67ffffffffffffffff81116103d357602090601f01601f19160190565b9061047861047383610449565b6103d8565b918252565b6104876036610466565b7f427463526566756e64556e6c6f636b65722e756e6c6f636b2873796e7468657360208201527f69732c20737461626c654272696467696e674665652900000000000000000000604082015290565b61007361047d565b35610073816103ec565b3561007381610076565b61050b6105056100739263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b9061056861057a9161009a9698979561055b60809661055460a08801946000890152565b6020870152565b8482036040860152610257565b6001600160a01b039097166060830152565b0152565b6100736100736100739290565b6101d39061057e565b61009a946105d9829897956105c96080966105c26105e697600060a089019801906001600160a01b03169052565b60208c0152565b6001600160a01b031660408a0152565b8782036060890152610257565b94019061058b565b6040513d6000823e3d90fd5b9492610607919492610865565b91810161061391610435565b926106266000546001600160a01b031690565b61062f906101c1565b84929061063a845190565b6106426104d6565b9161064c926109dc565b60000193845161065b90610a36565b60200191610667835190565b61067090610a7b565b51926020810193610680856104de565b9551919361068d856104e8565b610696906101c1565b9051906106a663a0d955706104f2565b936106b060405190565b98899560208701908152600401946106c795610530565b6020820181038252036106da90856103b1565b6106e3906101c1565b906106ed906104e8565b6106f6906101c1565b91610700906104de565b906107136000546001600160a01b031690565b61071c906101c1565b91813b1561008857600080946107688261073560405190565b988997889687957f3add6d5a00000000000000000000000000000000000000000000000000000000875260048701610594565b03925af18015610791576107795750565b61009a90600061078981836103b1565b81019061016d565b6105ee565b61007360206103d8565b6107a8610796565b9060608252565b6100736107a0565b90826000939282370152565b909291926107d361047382610449565b93818552818301116100885761009a9160208501906107b7565b9080601f8301121561008857816020610073933591016107c3565b9190916020818403126100885761081f60206103d8565b92813567ffffffffffffffff81116100885761083b92016107ed565b8252565b9060208282031261008857813567ffffffffffffffff8111610088576100739201610808565b610073916108716107af565b5081019061083f565b506100739060208101906103f2565b9060206108b061009a936108a76108a3600083018361087a565b8552565b8281019061087a565b910152565b60408101929161009a9190610889565b6100736108d160405190565b80926108e16020830191826108b5565b908103825203826103b1565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1368390030181121561008857016020813591019167ffffffffffffffff82116100885736829003831361008857565b9190610281816109568161028b9560209181520190565b80956107b7565b61007391602081019161097090806108ed565b82840390925261093f565b60208082526100739291019061095d565b61007361099860405190565b80926108e160208301918261097b565b60409061057a6109ca61009a9597969460608401908482036000860152610257565b6001600160a01b039097166020830152565b610a3190610a2261009a946109f060405190565b9485936004602086017f0d26b925000000000000000000000000000000000000000000000000000000008152016109a8565b602082018103825203826103b1565b610ac4565b610a22610a3161009a92610a4960405190565b9283916004602084017f0be77f56000000000000000000000000000000000000000000000000000000008152016102fb565b610a22610a3161009a92610a8e60405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b61009a906001610b20565b60008091610ae56a636f6e736f6c652e6c6f6790565b602082519201905afa50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b600103610af15761009a90610acf56fea2646970667358221220befa6c80989dda29037019f8925cb4e457703ccce30d3e69ef927312f4f9503964736f6c634300081c0033'

type BtcRefundUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: BtcRefundUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class BtcRefundUnlocker__factory extends ContractFactory {
    constructor(...args: BtcRefundUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'BtcRefundUnlocker'
    }

    deploy(
        _synthesis: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BtcRefundUnlocker> {
        return super.deploy(_synthesis, overrides || {}) as Promise<BtcRefundUnlocker>
    }
    getDeployTransaction(
        _synthesis: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_synthesis, overrides || {})
    }
    attach(address: string): BtcRefundUnlocker {
        return super.attach(address) as BtcRefundUnlocker
    }
    connect(signer: Signer): BtcRefundUnlocker__factory {
        return super.connect(signer) as BtcRefundUnlocker__factory
    }
    static readonly contractName: 'BtcRefundUnlocker'
    public readonly contractName: 'BtcRefundUnlocker'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): BtcRefundUnlockerInterface {
        return new utils.Interface(_abi) as BtcRefundUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): BtcRefundUnlocker {
        return new Contract(address, _abi, signerOrProvider) as BtcRefundUnlocker
    }
}
