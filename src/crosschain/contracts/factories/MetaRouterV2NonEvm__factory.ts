/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { MetaRouterV2NonEvm, MetaRouterV2NonEvmInterface } from '../MetaRouterV2NonEvm'

const _abi = [
    {
        inputs: [],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'stableBridgingFee',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'externalID',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'tokenReal',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint256',
                        name: 'chainID',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                    },
                    {
                        internalType: 'address[]',
                        name: 'swapTokens',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address',
                        name: 'secondDexRouter',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'secondSwapCalldata',
                        type: 'bytes',
                    },
                    {
                        internalType: 'address',
                        name: 'finalDexRouter',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'finalSwapCalldata',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct MetaRouteStructsNonEvm.MetaMintTransactionNonEvm',
                name: '_metaMintTransaction',
                type: 'tuple',
            },
        ],
        name: 'metaMintSwap',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'firstSwapCalldata',
                        type: 'bytes',
                    },
                    {
                        internalType: 'bytes',
                        name: 'secondSwapCalldata',
                        type: 'bytes',
                    },
                    {
                        internalType: 'address[]',
                        name: 'approvedTokens',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address',
                        name: 'firstDexRouter',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'secondDexRouter',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bool',
                        name: 'nativeIn',
                        type: 'bool',
                    },
                    {
                        internalType: 'address',
                        name: 'relayRecipient',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'otherSideCalldata',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct MetaRouteStructsNonEvm.MetaRouteTransactionV2NonEvm',
                name: '_metarouteTransaction',
                type: 'tuple',
            },
        ],
        name: 'metaRouteV2',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'metaRouterGateway',
        outputs: [
            {
                internalType: 'contract MetaRouterGateway',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_token',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '_amount',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: '_router',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: '_swapCalldata',
                type: 'bytes',
            },
        ],
        name: 'swap',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x608060405234801561001057600080fd5b503060405161001e90610070565b6001600160a01b039091168152602001604051809103906000f08015801561004a573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905561007d565b6104d7806115b483390190565b6115288061008c6000396000f3fe60806040526004361061003f5760003560e01c80635ae904e0146100445780637f0f41d714610059578063c394a5da14610079578063fe1bc5cc146100b5575b600080fd5b6100576100523660046112b0565b6100d5565b005b34801561006557600080fd5b506100576100743660046110eb565b6108e0565b34801561008557600080fd5b50600054610099906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c157600080fd5b506100576100d0366004611274565b610953565b60006100e46040830183611364565b91506100f8905060e0830160c08401611186565b6101c4576000546001600160a01b0316639fc314c861011a6040850185611364565b600081811061012b5761012b61144d565b905060200201602081019061014091906110d0565b336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0392831660048201529116602482015260a08501356044820152606401600060405180830381600087803b1580156101ab57600080fd5b505af11580156101bf573d6000803e3d6000fd5b505050505b60a08201356101d383806113b5565b159050610466576101ea60e0840160c08501611186565b61023e5761023e6101fe6040850185611364565b600081811061020f5761020f61144d565b905060200201602081019061022491906110d0565b61023460808601606087016110d0565b8560a00135610bfb565b6000546001600160a01b031661025a60808501606086016110d0565b6001600160a01b031614156102dc5760405162461bcd60e51b815260206004820152602260248201527f4d657461526f7574657256323a20696e76616c696420666972737420726f757460448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000806102ef60808601606087016110d0565b6001600160a01b03163461030387806113b5565b604051610311929190611305565b60006040518083038185875af1925050503d806000811461034e576040519150601f19603f3d011682016040523d82523d6000602084013e610353565b606091505b5091509150816103b55761039c816040518060400160405280601f81526020017f4d657461526f7574657256323a2066697273742073776170206661696c656400815250610ccc565b60405162461bcd60e51b81526004016102d39190611331565b6103c26040860186611364565b60018181106103d3576103d361144d565b90506020020160208101906103e891906110d0565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046191906112ec565b925050505b8061047460208501856113b5565b15905061072557600061048a60208601866113b5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505060648101849052905061051c6104d76040870187611364565b6104e26002886113fc565b8181106104f1576104f161144d565b905060200201602081019061050691906110d0565b61051660a08801608089016110d0565b85610bfb565b6000546001600160a01b031661053860a08701608088016110d0565b6001600160a01b031614156105b55760405162461bcd60e51b815260206004820152602360248201527f4d657461526f7574657256323a20696e76616c6964207365636f6e6420726f7560448201527f746572000000000000000000000000000000000000000000000000000000000060648201526084016102d3565b6000806105c860a08801608089016110d0565b6001600160a01b0316836040516105df9190611315565b6000604051808303816000865af19150503d806000811461061c576040519150601f19603f3d011682016040523d82523d6000602084013e610621565b606091505b50915091508161066a5761039c816040518060400160405280602081526020017f4d657461526f7574657256323a207365636f6e642073776170206661696c6564815250610ccc565b6106776040880188611364565b6106826001896113fc565b8181106106915761069161144d565b90506020020160208101906106a691906110d0565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156106e757600080fd5b505afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f91906112ec565b93505050505b61077b6107356040860186611364565b6107406001876113fc565b81811061074f5761074f61144d565b905060200201602081019061076491906110d0565b610775610100870160e088016110d0565b83610bfb565b600061078b6101008601866113b5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506064850187905254939450506001600160a01b0390921691506107e79050610100870160e088016110d0565b6001600160a01b0316141561083e5760405162461bcd60e51b815260206004820152601f60248201527f4d657461526f7574657256323a20696e76616c696420726563697069656e740060448201526064016102d3565b600080610852610100880160e089016110d0565b6001600160a01b0316836040516108699190611315565b6000604051808303816000865af19150503d80600081146108a6576040519150601f19603f3d011682016040523d82523d6000602084013e6108ab565b606091505b5091509150816108d75761039c816040518060600160405280602481526020016114ad60249139610ccc565b50505050505050565b60008061092887878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060249250610d02915050565b91509150816108d75761039c8160405180606001604052806022815260200161148b60229139610ccc565b6000806109ed61096660c0850185611364565b60008181106109775761097761144d565b905060200201602081019061098c91906110d0565b60208501356109a2610100870160e088016110d0565b6109b06101008801886113b5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060649250610d02915050565b9150915081610a185761039c816040518060600160405280602281526020016114d160229139610ccc565b6000610a2760c0850185611364565b6001818110610a3857610a3861144d565b9050602002016020810190610a4d91906110d0565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610a8e57600080fd5b505afa158015610aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac691906112ec565b9050610ad560c0850185611364565b905060021415610b3157610b2b610aef60c0860186611364565b6001818110610b0057610b0061144d565b9050602002016020810190610b1591906110d0565b610b2560c0870160a088016110d0565b83610ddd565b50505050565b600080610bc8610b4460c0880188611364565b6001818110610b5557610b5561144d565b9050602002016020810190610b6a91906110d0565b84610b7d6101408a016101208b016110d0565b610b8b6101408b018b6113b5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060249250610d02915050565b9150915081610bf35761039c8160405180606001604052806022815260200161148b60229139610ccc565b505050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015282919085169063dd62ed3e9060440160206040518083038186803b158015610c5e57600080fd5b505afa158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9691906112ec565b1015610cc757610cc783837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f4c565b505050565b6060604483511015610cdf575080610cfc565b60048301925082806020019051810190610cf991906111c7565b90505b92915050565b600080546060906001600160a01b0386811691161415610d645760405162461bcd60e51b815260206004820152601c60248201527f4d657461526f7574657256323a20696e76616c696420726f757465720000000060448201526064016102d3565b610d6f878688610bfb565b8583850152846001600160a01b031684604051610d8c9190611315565b6000604051808303816000865af19150503d8060008114610dc9576040519150601f19603f3d011682016040523d82523d6000602084013e610dce565b606091505b50909890975095505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691610e679190611315565b6000604051808303816000865af19150503d8060008114610ea4576040519150601f19603f3d011682016040523d82523d6000602084013e610ea9565b606091505b5091509150818015610ed3575080511580610ed3575080806020019051810190610ed391906111aa565b610f455760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201527f616e73666572206661696c65640000000000000000000000000000000000000060648201526084016102d3565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691610fd69190611315565b6000604051808303816000865af19150503d8060008114611013576040519150601f19603f3d011682016040523d82523d6000602084013e611018565b606091505b509150915081801561104257508051158061104257508080602001905181019061104291906111aa565b610f455760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201527f726f7665206661696c656400000000000000000000000000000000000000000060648201526084016102d3565b80356001600160a01b03811681146110cb57600080fd5b919050565b6000602082840312156110e257600080fd5b610cf9826110b4565b60008060008060006080868803121561110357600080fd5b61110c866110b4565b945060208601359350611121604087016110b4565b9250606086013567ffffffffffffffff8082111561113e57600080fd5b818801915088601f83011261115257600080fd5b81358181111561116157600080fd5b89602082850101111561117357600080fd5b9699959850939650602001949392505050565b60006020828403121561119857600080fd5b81356111a381611479565b9392505050565b6000602082840312156111bc57600080fd5b81516111a381611479565b6000602082840312156111d957600080fd5b815167ffffffffffffffff808211156111f157600080fd5b818401915084601f83011261120557600080fd5b81518181111561121757611217611463565b604051601f8201601f19908116603f0116810190838211818310171561123f5761123f611463565b8160405282815287602084870101111561125857600080fd5b611269836020830160208801611421565b979650505050505050565b60006020828403121561128657600080fd5b813567ffffffffffffffff81111561129d57600080fd5b820161016081850312156111a357600080fd5b6000602082840312156112c257600080fd5b813567ffffffffffffffff8111156112d957600080fd5b820161012081850312156111a357600080fd5b6000602082840312156112fe57600080fd5b5051919050565b8183823760009101908152919050565b60008251611327818460208701611421565b9190910192915050565b6020815260008251806020840152611350816040850160208701611421565b601f01601f19169190910160400192915050565b6000808335601e1984360301811261137b57600080fd5b83018035915067ffffffffffffffff82111561139657600080fd5b6020019150600581901b36038213156113ae57600080fd5b9250929050565b6000808335601e198436030181126113cc57600080fd5b83018035915067ffffffffffffffff8211156113e757600080fd5b6020019150368190038213156113ae57600080fd5b60008282101561141c57634e487b7160e01b600052601160045260246000fd5b500390565b60005b8381101561143c578181015183820152602001611424565b83811115610b2b5750506000910152565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461148757600080fd5b5056fe4d657461526f7574657256323a2065787465726e616c2073776170206661696c65644d657461526f7574657256323a206f7468657220736964652063616c6c206661696c65644d657461526f7574657256323a20696e7465726e616c2073776170206661696c6564a26469706673582212208d5c145cdd570a524a4be0bb9d012cef8c73deb632e801abe612a6a9880e4e8c64736f6c6343000807003360a060405234801561001057600080fd5b506040516104d73803806104d783398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c61043961009e6000396000818160550152818160a2015261017101526104396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639fc314c81461003b578063dbec15bb14610050575b600080fd5b61004e610049366004610363565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16331461016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f53796d623a2063616c6c6572206973206e6f7420746865206d657461726f757460448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61019683837f00000000000000000000000000000000000000000000000000000000000000008461019b565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161023a91906103c8565b6000604051808303816000865af19150503d8060008114610277576040519150601f19603f3d011682016040523d82523d6000602084013e61027c565b606091505b50915091508180156102a65750805115806102a65750808060200190518101906102a6919061039f565b610332576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260448201527f616e7366657246726f6d206661696c65640000000000000000000000000000006064820152608401610161565b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461035e57600080fd5b919050565b60008060006060848603121561037857600080fd5b6103818461033a565b925061038f6020850161033a565b9150604084013590509250925092565b6000602082840312156103b157600080fd5b815180151581146103c157600080fd5b9392505050565b6000825160005b818110156103e957602081860181015185830152016103cf565b818111156103f8576000828501525b50919091019291505056fea2646970667358221220a75472c40ae2f026f5b9d144cc07471c35d612cc4eacd9ce4e7f4f8aeed958d364736f6c63430008070033'

type MetaRouterV2NonEvmConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: MetaRouterV2NonEvmConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class MetaRouterV2NonEvm__factory extends ContractFactory {
    constructor(...args: MetaRouterV2NonEvmConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'MetaRouterV2NonEvm'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MetaRouterV2NonEvm> {
        return super.deploy(overrides || {}) as Promise<MetaRouterV2NonEvm>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): MetaRouterV2NonEvm {
        return super.attach(address) as MetaRouterV2NonEvm
    }
    connect(signer: Signer): MetaRouterV2NonEvm__factory {
        return super.connect(signer) as MetaRouterV2NonEvm__factory
    }
    static readonly contractName: 'MetaRouterV2NonEvm'
    public readonly contractName: 'MetaRouterV2NonEvm'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): MetaRouterV2NonEvmInterface {
        return new utils.Interface(_abi) as MetaRouterV2NonEvmInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): MetaRouterV2NonEvm {
        return new Contract(address, _abi, signerOrProvider) as MetaRouterV2NonEvm
    }
}
