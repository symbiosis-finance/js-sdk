/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { TimedUnlocker, TimedUnlockerInterface } from '../TimedUnlocker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'currentTimestamp',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'lockTimestamp',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'delay',
                type: 'uint256',
            },
        ],
        name: 'TooEarly',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'delay',
                        type: 'uint256',
                    },
                    {
                        components: [
                            {
                                internalType: 'contract IDepositUnlocker',
                                name: 'unlocker',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'condition',
                                type: 'bytes',
                            },
                        ],
                        internalType: 'struct DepositoryTypes.UnlockCondition',
                        name: 'next',
                        type: 'tuple',
                    },
                ],
                internalType: 'struct TimedUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'delay',
                        type: 'uint256',
                    },
                    {
                        components: [
                            {
                                internalType: 'contract IDepositUnlocker',
                                name: 'unlocker',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'condition',
                                type: 'bytes',
                            },
                        ],
                        internalType: 'struct DepositoryTypes.UnlockCondition',
                        name: 'next',
                        type: 'tuple',
                    },
                ],
                internalType: 'struct TimedUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IRouter',
                name: 'router',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'blockNumber',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'timestamp',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.BlockchainState',
                name: 'lockState',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x60806040523460195760405161091d61001e823961091d90f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80634d8893d014610040578063760bd1181461003b5763fddb179e03610080576102e6565b610287565b610158565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361008057565b5f80fd5b9050359061009182610061565b565b908160609103126100805790565b908160409103126100805790565b909182601f830112156100805781359167ffffffffffffffff831161008057602001926001830284011161008057565b909161010082840312610080576100f68383610084565b926101048160208501610093565b9261011282608083016100a1565b9260c082013567ffffffffffffffff811161008057836101339184016100af565b92909360e082013567ffffffffffffffff81116100805761015492016100af565b9091565b346100805761017761016b3660046100df565b95949094939193610536565b60405180805b0390f35b9060208282031261008057813567ffffffffffffffff81116100805761015492016100af565b9052565b61004561005e61005e9273ffffffffffffffffffffffffffffffffffffffff1690565b61005e906101ab565b61005e906101ce565b6101a7906101d7565b90825f9392825e0152565b61021561021e60209361022893610209815190565b80835293849260200190565b958691016101e9565b601f01601f191690565b0190565b61005e91602060408201926102475f8201515f8501906101e0565b01519060208184039101526101f4565b8051825261005e9160408101916020015190602081840391015261022c565b602080825261005e92910190610257565b346100805761017d6102a361029d366004610181565b906107a5565b60405191829182610276565b9060208282031261008057813567ffffffffffffffff81116100805761005e92016100a1565b602080825261005e929101906101f4565b346100805761017d6103016102fc3660046102af565b6108bf565b604051918291826102d5565b80610079565b3561005e8161030d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9190820180921161035757565b61031d565b90815260608101939261009192909160409161037a905b6020830152565b0152565b93929190931561038e5750509050565b7fe6d1c94f000000000000000000000000000000000000000000000000000000005f908152936103c09350600461035c565b035ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff82111761041357604052565b6103c4565b5f91031261008057565b5061005e906020810190610084565b905035906100918261030d565b5061005e906020810190610431565b90604061048d6100919361046d6104665f830183610422565b85906101e0565b61048461047d602083018361043e565b6020860152565b8281019061043e565b910152565b90602061048d610091936104846104ab5f83018361043e565b8552565b90825f939282370152565b919061021e816104d1816102289560209181520190565b80956104af565b94929361051061005e979561050661051d956104fc6101008b01965f8c01906101e0565b60208a019061044d565b6080880190610492565b85820360c08701526101f4565b9260e08185039101526104ba565b6040513d5f823e3d90fd5b95926020919294610546916107a5565b61058982860161055581610313565b61058161057c61057361005e5f88019461056d865190565b9061034a565b42101593610313565b915190565b91429061037e565b019160206105b66105b15f8651015173ffffffffffffffffffffffffffffffffffffffff1690565b6101d7565b9351015195833b15610080576106065f969287936105d360405190565b998a98899788967f4d8893d0000000000000000000000000000000000000000000000000000000008852600488016104d8565b03925af1801561062e576106175750565b610091905f61062681836103f1565b810190610418565b61052b565b9061009161064060405190565b92836103f1565b61005e6040610633565b610659610647565b905f825260606020830152565b905250565b61005e610651565b61067b610647565b905f8252602080830161066661066b565b61005e610673565b67ffffffffffffffff811161041357602090601f01601f19160190565b909291926106c66106c182610694565b610633565b9381855281830111610080576100919160208501906104af565b9080601f830112156100805781602061005e933591016106b1565b919091604081840312610080576107126040610633565b9261071d8183610084565b8452602082013567ffffffffffffffff81116100805761037392016106e0565b919091604081840312610080576107546040610633565b9261075f8183610431565b8452602082013567ffffffffffffffff81116100805761037392016106fb565b9060208282031261008057813567ffffffffffffffff81116100805761005e920161073d565b61005e916107b161068c565b5081019061077f565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc13683900301811215610080570190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1368390030181121561008057016020813591019167ffffffffffffffff82116100805736829003831361008057565b61005e91604081019161086a906108606108598280610422565b84906101e0565b60208101906107ed565b9160208185039101526104ba565b61005e9160408101916108a090610896610892828061043e565b8452565b60208101906107ba565b90602081840391015261083f565b602080825261005e92910190610878565b61005e6108cb60405190565b80926108db6020830191826108ae565b908103825203826103f156fea26469706673582212207465ed7d119d6608f8256d853e4622e3f36add6f2e13a4543cebf6f5fba2042464736f6c634300081c0033'

type TimedUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: TimedUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class TimedUnlocker__factory extends ContractFactory {
    constructor(...args: TimedUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'TimedUnlocker'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<TimedUnlocker> {
        return super.deploy(overrides || {}) as Promise<TimedUnlocker>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): TimedUnlocker {
        return super.attach(address) as TimedUnlocker
    }
    connect(signer: Signer): TimedUnlocker__factory {
        return super.connect(signer) as TimedUnlocker__factory
    }
    static readonly contractName: 'TimedUnlocker'
    public readonly contractName: 'TimedUnlocker'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): TimedUnlockerInterface {
        return new utils.Interface(_abi) as TimedUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): TimedUnlocker {
        return new Contract(address, _abi, signerOrProvider) as TimedUnlocker
    }
}
