/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BranchedUnlocker, BranchedUnlockerInterface } from '../BranchedUnlocker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'index',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'unlockerCount',
                type: 'uint256',
            },
        ],
        name: 'InvalidLockIndex',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'contract IDepositUnlocker',
                                name: 'unlocker',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'condition',
                                type: 'bytes',
                            },
                        ],
                        internalType: 'struct DepositoryTypes.Unlocker[]',
                        name: 'unlockers',
                        type: 'tuple[]',
                    },
                ],
                internalType: 'struct BranchedUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'contract IDepositUnlocker',
                                name: 'unlocker',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'condition',
                                type: 'bytes',
                            },
                        ],
                        internalType: 'struct DepositoryTypes.Unlocker[]',
                        name: 'unlockers',
                        type: 'tuple[]',
                    },
                ],
                internalType: 'struct BranchedUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'index',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes',
                        name: 'solution',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BranchedUnlocker.Solution',
                name: 's',
                type: 'tuple',
            },
        ],
        name: 'encodeSolution',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IMetaRouter',
                name: 'metarouter',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x608060405234601957604051610d7161001e8239610d7190f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806322c0bff814610050578063760bd1181461004b57806385a600c7146100465763b11e07ce03610090576103a9565b61034e565b6102e1565b61014b565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361009057565b5f80fd5b905035906100a182610071565b565b908160609103126100905790565b909182601f830112156100905781359167ffffffffffffffff831161009057602001926001830284011161009057565b919060c083820312610090576100f78184610094565b9261010582602083016100a3565b92608082013567ffffffffffffffff811161009057836101269184016100b1565b92909360a082013567ffffffffffffffff81116100905761014792016100b1565b9091565b346100905761016a61015e3660046100e1565b94939093929192610756565b60405180805b0390f35b9060208282031261009057813567ffffffffffffffff81116100905761014792016100b1565b61005561006e61006e9273ffffffffffffffffffffffffffffffffffffffff1690565b61006e9061019a565b61006e906101bd565b6101d8906101c6565b9052565b90825f9392825e0152565b61020861021160209361021b936101fc815190565b80835293849260200190565b958691016101dc565b601f01601f191690565b0190565b61006e916020604082019261023a5f8201515f8501906101cf565b01519060208184039101526101e7565b9061006e9161021f565b9061026a610260835190565b8083529160200190565b908161027c6020830284019460200190565b925f915b83831061028f57505050505090565b909192939460206102b26102ab8385600195038752895161024a565b9760200190565b9301930191939290610280565b51602080835261006e920190610254565b602080825261006e929101906102bf565b34610090576101706102fd6102f7366004610174565b906109d7565b604051918291826102d0565b908160209103126100905790565b9060208282031261009057813567ffffffffffffffff81116100905761006e9201610309565b602080825261006e929101906101e7565b3461009057610170610369610364366004610317565b610b7e565b6040519182918261033d565b908160409103126100905790565b9060208282031261009057813567ffffffffffffffff81116100905761006e9201610375565b34610090576101706103696103bf366004610383565b610bd5565b634e487b7160e01b5f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff8211176103fa57604052565b6103c4565b906100a161040c60405190565b92836103d8565b67ffffffffffffffff81116103fa57602090601f01601f19160190565b9061044261043d83610413565b6103ff565b918252565b6104516023610430565b7f4272616e63686564556e6c6f636b65722e756e6c6f636b286d657461726f757460208201527f6572290000000000000000000000000000000000000000000000000000000000604082015290565b61006e610447565b6104b26029610430565b7f4272616e63686564556e6c6f636b65722e756e6c6f636b28756e6c6f636b657260208201527f732e6c656e677468290000000000000000000000000000000000000000000000604082015290565b61006e6104a8565b80610089565b905035906100a182610509565b90825f939282370152565b9092919261053761043d82610413565b9381855281830111610090576100a191602085019061051c565b9080601f830112156100905781602061006e93359101610527565b9190916040818403126100905761058360406103ff565b9261058e818361050f565b8452602082013567ffffffffffffffff8111610090576105ae9201610551565b6020830152565b9060208282031261009057813567ffffffffffffffff81116100905761006e920161056c565b6105e5601e610430565b7f4272616e63686564556e6c6f636b65722e756e6c6f636b28696e646578290000602082015290565b61006e6105db565b9081526040810192916100a19160200152565b15610632575050565b7f3279a3b7000000000000000000000000000000000000000000000000000000005f90815291610663916004610616565b035ffd5b634e487b7160e01b5f52603260045260245ffd5b90610684825190565b811015610695576020809102010190565b610667565b5f91031261009057565b5061006e906020810190610094565b5061006e90602081019061050f565b9060406107026100a1936106e26106db5f8301836106a4565b85906101cf565b6106f96106f260208301836106b3565b6020860152565b828101906106b3565b910152565b929061073d9161073061006e969461072660c08801945f8901906101cf565b60208701906106c2565b84820360808601526101e7565b9160a08184039101526101e7565b6040513d5f823e3d90fd5b935f6107836107a69397956107fc9561077e6107718a6101c6565b6107796104a0565b610c2a565b6109d7565b019361079e61079186515190565b610799610501565b610ca5565b8101906105b5565b9182906107f6906107c06107b8845190565b61079961060e565b6107f06107cb845190565b6107de6107da61006e85515190565b9190565b106107e7855190565b83515191610629565b51915190565b9061067b565b51602080610826610821845173ffffffffffffffffffffffffffffffffffffffff1690565b6101c6565b92015192015193813b15610090575f809461087661084360405190565b978896879586947f22c0bff800000000000000000000000000000000000000000000000000000000865260048601610707565b03925af1801561089e576108875750565b6100a1905f61089681836103d8565b81019061069a565b61074b565b61006e60206103ff565b6108b56108a3565b9060608252565b61006e6108ad565b67ffffffffffffffff81116103fa5760208091020190565b919091604081840312610090576108f360406103ff565b9261058e8183610094565b92919061090d61043d826108c4565b93818552602080860192028101918383116100905781905b838210610933575050505050565b813567ffffffffffffffff81116100905760209161095487849387016108dc565b815201910190610925565b9080601f830112156100905781602061006e933591016108fe565b9190916020818403126100905761099160206103ff565b92813567ffffffffffffffff8111610090576109ad920161095f565b8252565b9060208282031261009057813567ffffffffffffffff81116100905761006e920161097a565b61006e916109e36108bc565b508101906109b1565b9035601e19368390030181121561009057016020813591019167ffffffffffffffff821161009057602082023603831361009057565b9035601e19368390030181121561009057016020813591019167ffffffffffffffff82116100905736829003831361009057565b919061021181610a6d8161021b9560209181520190565b809561051c565b61006e916040810191610a9f90610a95610a8e82806106a4565b84906101cf565b6020810190610a22565b916020818503910152610a56565b9061006e91610a74565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc13683900301811215610090570190565b818352916020019081610b006020830284019490565b92835f925b848410610b155750505050505090565b9091929394956020610b41610b3a8385600195038852610b358b88610ab7565b610aad565b9860200190565b940194019294939190610b05565b61006e916020810191610b6290806109ec565b828403909252610aea565b602080825261006e92910190610b4f565b61006e610b8a60405190565b8092610b9a602083019182610b6d565b908103825203826103d8565b61006e916040810191610a9f90610a95610bc082806106b3565b8452565b602080825261006e92910190610ba6565b61006e610be160405190565b8092610b9a602083019182610bc4565b92916020610c0d6100a19360408701908782035f8901526101e7565b94019073ffffffffffffffffffffffffffffffffffffffff169052565b90610c7f6100a192610c70610c3e60405190565b9384926004602085017f319af33300000000000000000000000000000000000000000000000000000000815201610bf1565b602082018103825203826103d8565b610ceb565b92916020610ca06100a19360408701908782035f8901526101e7565b940152565b90610c7f6100a192610c70610cb960405190565b9384926004602085017fb60e72cc00000000000000000000000000000000000000000000000000000000815201610c84565b6100a1906001610d2b565b5f8091610d0b6a636f6e736f6c652e6c6f6790565b602082519201905afa50565b634e487b7160e01b5f52605160045260245ffd5b600103610d17576100a190610cf656fea2646970667358221220627b224a9876a2edfe71b477526d9eb97b4e77e93c07a0c3010969a8b899263264736f6c634300081c0033'

type BranchedUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: BranchedUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class BranchedUnlocker__factory extends ContractFactory {
    constructor(...args: BranchedUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'BranchedUnlocker'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BranchedUnlocker> {
        return super.deploy(overrides || {}) as Promise<BranchedUnlocker>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): BranchedUnlocker {
        return super.attach(address) as BranchedUnlocker
    }
    connect(signer: Signer): BranchedUnlocker__factory {
        return super.connect(signer) as BranchedUnlocker__factory
    }
    static readonly contractName: 'BranchedUnlocker'
    public readonly contractName: 'BranchedUnlocker'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): BranchedUnlockerInterface {
        return new utils.Interface(_abi) as BranchedUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): BranchedUnlocker {
        return new Contract(address, _abi, signerOrProvider) as BranchedUnlocker
    }
}
