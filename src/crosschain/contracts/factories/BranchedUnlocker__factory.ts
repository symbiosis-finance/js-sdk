/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BranchedUnlocker, BranchedUnlockerInterface } from '../BranchedUnlocker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'index',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'unlockerCount',
                type: 'uint256',
            },
        ],
        name: 'InvalidLockIndex',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
        ],
        name: 'decodeCondition',
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'contract IDepositUnlocker',
                                name: 'unlocker',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'condition',
                                type: 'bytes',
                            },
                        ],
                        internalType: 'struct DepositoryTypes.UnlockCondition[]',
                        name: 'branches',
                        type: 'tuple[]',
                    },
                ],
                internalType: 'struct BranchedUnlocker.Condition',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'contract IDepositUnlocker',
                                name: 'unlocker',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'condition',
                                type: 'bytes',
                            },
                        ],
                        internalType: 'struct DepositoryTypes.UnlockCondition[]',
                        name: 'branches',
                        type: 'tuple[]',
                    },
                ],
                internalType: 'struct BranchedUnlocker.Condition',
                name: 'c',
                type: 'tuple',
            },
        ],
        name: 'encodeCondition',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'index',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes',
                        name: 'solution',
                        type: 'bytes',
                    },
                ],
                internalType: 'struct BranchedUnlocker.Solution',
                name: 's',
                type: 'tuple',
            },
        ],
        name: 'encodeSolution',
        outputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IRouter',
                name: 'router',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20',
                        name: 'token',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct DepositoryTypes.Deposit',
                name: 'deposit',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'condition',
                type: 'bytes',
            },
            {
                internalType: 'bytes',
                name: 'solution',
                type: 'bytes',
            },
        ],
        name: 'unlock',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x608060405234601957604051610d4b61001e8239610d4b90f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806322c0bff814610050578063760bd1181461004b57806385a600c7146100465763b11e07ce03610090576103a9565b61034e565b6102e1565b61014b565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361009057565b5f80fd5b905035906100a182610071565b565b908160609103126100905790565b909182601f830112156100905781359167ffffffffffffffff831161009057602001926001830284011161009057565b919060c083820312610090576100f78184610094565b9261010582602083016100a3565b92608082013567ffffffffffffffff811161009057836101269184016100b1565b92909360a082013567ffffffffffffffff81116100905761014792016100b1565b9091565b346100905761016a61015e3660046100e1565b94939093929192610730565b60405180805b0390f35b9060208282031261009057813567ffffffffffffffff81116100905761014792016100b1565b61005561006e61006e9273ffffffffffffffffffffffffffffffffffffffff1690565b61006e9061019a565b61006e906101bd565b6101d8906101c6565b9052565b90825f9392825e0152565b61020861021160209361021b936101fc815190565b80835293849260200190565b958691016101dc565b601f01601f191690565b0190565b61006e916020604082019261023a5f8201515f8501906101cf565b01519060208184039101526101e7565b9061006e9161021f565b9061026a610260835190565b8083529160200190565b908161027c6020830284019460200190565b925f915b83831061028f57505050505090565b909192939460206102b26102ab8385600195038752895161024a565b9760200190565b9301930191939290610280565b51602080835261006e920190610254565b602080825261006e929101906102bf565b34610090576101706102fd6102f7366004610174565b906109b1565b604051918291826102d0565b908160209103126100905790565b9060208282031261009057813567ffffffffffffffff81116100905761006e9201610309565b602080825261006e929101906101e7565b3461009057610170610369610364366004610317565b610b58565b6040519182918261033d565b908160409103126100905790565b9060208282031261009057813567ffffffffffffffff81116100905761006e9201610375565b34610090576101706103696103bf366004610383565b610baf565b634e487b7160e01b5f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff8211176103fa57604052565b6103c4565b906100a161040c60405190565b92836103d8565b67ffffffffffffffff81116103fa57602090601f01601f19160190565b9061044261043d83610413565b6103ff565b918252565b610451601f610430565b7f4272616e63686564556e6c6f636b65722e756e6c6f636b28726f757465722900602082015290565b61006e610447565b61048c6028610430565b7f4272616e63686564556e6c6f636b65722e756e6c6f636b286272616e6368657360208201527f2e6c656e67746829000000000000000000000000000000000000000000000000604082015290565b61006e610482565b80610089565b905035906100a1826104e3565b90825f939282370152565b9092919261051161043d82610413565b9381855281830111610090576100a19160208501906104f6565b9080601f830112156100905781602061006e93359101610501565b9190916040818403126100905761055d60406103ff565b9261056881836104e9565b8452602082013567ffffffffffffffff811161009057610588920161052b565b6020830152565b9060208282031261009057813567ffffffffffffffff81116100905761006e9201610546565b6105bf601e610430565b7f4272616e63686564556e6c6f636b65722e756e6c6f636b28696e646578290000602082015290565b61006e6105b5565b9081526040810192916100a19160200152565b1561060c575050565b7f3279a3b7000000000000000000000000000000000000000000000000000000005f9081529161063d9160046105f0565b035ffd5b634e487b7160e01b5f52603260045260245ffd5b9061065e825190565b81101561066f576020809102010190565b610641565b5f91031261009057565b5061006e906020810190610094565b5061006e9060208101906104e9565b9060406106dc6100a1936106bc6106b55f83018361067e565b85906101cf565b6106d36106cc602083018361068d565b6020860152565b8281019061068d565b910152565b92906107179161070a61006e969461070060c08801945f8901906101cf565b602087019061069c565b84820360808601526101e7565b9160a08184039101526101e7565b6040513d5f823e3d90fd5b935f61075d6107809397956107d69561075861074b8a6101c6565b61075361047a565b610c04565b6109b1565b019361077861076b86515190565b6107736104db565b610c7f565b81019061058f565b9182906107d09061079a610792845190565b6107736105e8565b6107ca6107a5845190565b6107b86107b461006e85515190565b9190565b106107c1855190565b83515191610603565b51915190565b90610655565b516020806108006107fb845173ffffffffffffffffffffffffffffffffffffffff1690565b6101c6565b92015192015193813b15610090575f809461085061081d60405190565b978896879586947f22c0bff8000000000000000000000000000000000000000000000000000000008652600486016106e1565b03925af18015610878576108615750565b6100a1905f61087081836103d8565b810190610674565b610725565b61006e60206103ff565b61088f61087d565b9060608252565b61006e610887565b67ffffffffffffffff81116103fa5760208091020190565b919091604081840312610090576108cd60406103ff565b926105688183610094565b9291906108e761043d8261089e565b93818552602080860192028101918383116100905781905b83821061090d575050505050565b813567ffffffffffffffff81116100905760209161092e87849387016108b6565b8152019101906108ff565b9080601f830112156100905781602061006e933591016108d8565b9190916020818403126100905761096b60206103ff565b92813567ffffffffffffffff8111610090576109879201610939565b8252565b9060208282031261009057813567ffffffffffffffff81116100905761006e9201610954565b61006e916109bd610896565b5081019061098b565b9035601e19368390030181121561009057016020813591019167ffffffffffffffff821161009057602082023603831361009057565b9035601e19368390030181121561009057016020813591019167ffffffffffffffff82116100905736829003831361009057565b919061021181610a478161021b9560209181520190565b80956104f6565b61006e916040810191610a7990610a6f610a68828061067e565b84906101cf565b60208101906109fc565b916020818503910152610a30565b9061006e91610a4e565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc13683900301811215610090570190565b818352916020019081610ada6020830284019490565b92835f925b848410610aef5750505050505090565b9091929394956020610b1b610b148385600195038852610b0f8b88610a91565b610a87565b9860200190565b940194019294939190610adf565b61006e916020810191610b3c90806109c6565b828403909252610ac4565b602080825261006e92910190610b29565b61006e610b6460405190565b8092610b74602083019182610b47565b908103825203826103d8565b61006e916040810191610a7990610a6f610b9a828061068d565b8452565b602080825261006e92910190610b80565b61006e610bbb60405190565b8092610b74602083019182610b9e565b92916020610be76100a19360408701908782035f8901526101e7565b94019073ffffffffffffffffffffffffffffffffffffffff169052565b90610c596100a192610c4a610c1860405190565b9384926004602085017f319af33300000000000000000000000000000000000000000000000000000000815201610bcb565b602082018103825203826103d8565b610cc5565b92916020610c7a6100a19360408701908782035f8901526101e7565b940152565b90610c596100a192610c4a610c9360405190565b9384926004602085017fb60e72cc00000000000000000000000000000000000000000000000000000000815201610c5e565b6100a1906001610d05565b5f8091610ce56a636f6e736f6c652e6c6f6790565b602082519201905afa50565b634e487b7160e01b5f52605160045260245ffd5b600103610cf1576100a190610cd056fea2646970667358221220178e44262153d0a923a8830531ab0ebbbae86a3de022d6a0557a8af1262b4f9f64736f6c634300081c0033'

type BranchedUnlockerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: BranchedUnlockerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
    xs.length > 1

export class BranchedUnlocker__factory extends ContractFactory {
    constructor(...args: BranchedUnlockerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
        this.contractName = 'BranchedUnlocker'
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BranchedUnlocker> {
        return super.deploy(overrides || {}) as Promise<BranchedUnlocker>
    }
    getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    attach(address: string): BranchedUnlocker {
        return super.attach(address) as BranchedUnlocker
    }
    connect(signer: Signer): BranchedUnlocker__factory {
        return super.connect(signer) as BranchedUnlocker__factory
    }
    static readonly contractName: 'BranchedUnlocker'
    public readonly contractName: 'BranchedUnlocker'
    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): BranchedUnlockerInterface {
        return new utils.Interface(_abi) as BranchedUnlockerInterface
    }
    static connect(address: string, signerOrProvider: Signer | Provider): BranchedUnlocker {
        return new Contract(address, _abi, signerOrProvider) as BranchedUnlocker
    }
}
